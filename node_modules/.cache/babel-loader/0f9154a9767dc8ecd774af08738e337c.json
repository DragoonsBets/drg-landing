{"ast":null,"code":"import _objectSpread from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react/src/components/accordion/Accordion.js\";\nimport React, { Component, Fragment, Children, cloneElement } from \"react\";\n\nvar Accordion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Accordion, _Component);\n\n  function Accordion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Accordion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Accordion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedAccordionItem: -1\n    };\n\n    _this.toggle = function (accordionIndex) {\n      if (_this.state.selectedAccordionItem === accordionIndex) {\n        _this.setState({\n          selectedAccordionItem: -1\n        });\n      } else {\n        _this.setState({\n          selectedAccordionItem: accordionIndex\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Accordion, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Nodes = Children.map(this.props.children, function (child, index) {\n        if (Boolean(child.type === Accordion.AccordionItem)) {\n          return cloneElement(child, _objectSpread({\n            index: index,\n            toggle: _this2.toggle,\n            selected: index === _this2.state.selectedAccordionItem ? true : false\n          }, child.props));\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"accordion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, Nodes);\n    }\n  }]);\n\n  return Accordion;\n}(Component);\n\nAccordion.AccordionItem = function (props) {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"accordion-item\",\n    onClick: function onClick() {\n      return props.toggle(props.index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.render(), \" \"), props.selected ? props.children : null);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/components/accordion/Accordion.js"],"names":["React","Component","Fragment","Children","cloneElement","Accordion","state","selectedAccordionItem","toggle","accordionIndex","setState","Nodes","map","props","children","child","index","Boolean","type","AccordionItem","selected","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,YAA/C,QAAmE,OAAnE;;IAEMC,S;;;;;;;;;;;;;;;;;UACHC,K,GAAQ;AACLC,MAAAA,qBAAqB,EAAE,CAAC;AADnB,K;;UAIRC,M,GAAS,UAAAC,cAAc,EAAI;AACxB,UAAI,MAAKH,KAAL,CAAWC,qBAAX,KAAqCE,cAAzC,EAAyD;AACtD,cAAKC,QAAL,CAAc;AACXH,UAAAA,qBAAqB,EAAE,CAAC;AADb,SAAd;AAGF,OAJD,MAIO;AACJ,cAAKG,QAAL,CAAc;AAAEH,UAAAA,qBAAqB,EAAEE;AAAzB,SAAd;AACF;AACH,K;;;;;;;6BAcQ;AAAA;;AACN,UAAME,KAAK,GAAGR,QAAQ,CAACS,GAAT,CAAa,KAAKC,KAAL,CAAWC,QAAxB,EAAkC,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/D,YAAIC,OAAO,CAACF,KAAK,CAACG,IAAN,KAAeb,SAAS,CAACc,aAA1B,CAAX,EAAqD;AAClD,iBAAOf,YAAY,CAACW,KAAD;AAChBC,YAAAA,KAAK,EAAEA,KADS;AAEhBR,YAAAA,MAAM,EAAE,MAAI,CAACA,MAFG;AAGhBY,YAAAA,QAAQ,EACLJ,KAAK,KAAK,MAAI,CAACV,KAAL,CAAWC,qBAArB,GAA6C,IAA7C,GAAoD;AAJvC,aAKbQ,KAAK,CAACF,KALO,EAAnB;AAOF;AACH,OAVa,CAAd;AAYA,aAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BF,KAA5B,CAAP;AACF;;;;EAzCoBV,S;;AAAlBI,S,CAeIc,a,GAAgB,UAAAN,KAAK;AAAA,SACzB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACG,IAAA,SAAS,EAAC,gBADb;AAEG,IAAA,OAAO,EAAE;AAAA,aAAMA,KAAK,CAACL,MAAN,CAAaK,KAAK,CAACG,KAAnB,CAAN;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIH,KAAK,CAACQ,MAAN,EAJJ,MADH,EAOIR,KAAK,CAACO,QAAN,GAAiBP,KAAK,CAACC,QAAvB,GAAkC,IAPtC,CADyB;AAAA,C;;AA6B/B,eAAeT,SAAf","sourcesContent":["import React, { Component, Fragment, Children, cloneElement } from \"react\";\n\nclass Accordion extends Component {\n   state = {\n      selectedAccordionItem: -1\n   };\n\n   toggle = accordionIndex => {\n      if (this.state.selectedAccordionItem === accordionIndex) {\n         this.setState({\n            selectedAccordionItem: -1\n         });\n      } else {\n         this.setState({ selectedAccordionItem: accordionIndex });\n      }\n   };\n\n   static AccordionItem = props => (\n      <Fragment>\n         <div\n            className=\"accordion-item\"\n            onClick={() => props.toggle(props.index)}\n         >\n            {props.render()} {/* can pass state and can do extra stuff*/}\n         </div>\n         {props.selected ? props.children : null}\n      </Fragment>\n   );\n\n   render() {\n      const Nodes = Children.map(this.props.children, (child, index) => {\n         if (Boolean(child.type === Accordion.AccordionItem)) {\n            return cloneElement(child, {\n               index: index,\n               toggle: this.toggle,\n               selected:\n                  index === this.state.selectedAccordionItem ? true : false,\n               ...child.props\n            });\n         }\n      });\n\n      return <div className=\"accordion\">{Nodes}</div>;\n   }\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}