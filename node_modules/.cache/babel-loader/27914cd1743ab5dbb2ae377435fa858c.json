{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _height = require('dom-helpers/query/height');\n\nvar _height2 = _interopRequireDefault(_height);\n\nvar _querySelectorAll = require('dom-helpers/query/querySelectorAll');\n\nvar _querySelectorAll2 = _interopRequireDefault(_querySelectorAll);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _dates = require('./utils/dates');\n\nvar _dates2 = _interopRequireDefault(_dates);\n\nvar _propTypes3 = require('./utils/propTypes');\n\nvar _eventLevels2 = require('./utils/eventLevels');\n\nvar _BackgroundCells = require('./BackgroundCells');\n\nvar _BackgroundCells2 = _interopRequireDefault(_BackgroundCells);\n\nvar _EventRow = require('./EventRow');\n\nvar _EventRow2 = _interopRequireDefault(_EventRow);\n\nvar _EventEndingRow = require('./EventEndingRow');\n\nvar _EventEndingRow2 = _interopRequireDefault(_EventEndingRow);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar isSegmentInSlot = function isSegmentInSlot(seg, slot) {\n  return seg.left <= slot && seg.right >= slot;\n};\n\nvar propTypes = {\n  date: _propTypes2.default.instanceOf(Date),\n  events: _propTypes2.default.array.isRequired,\n  range: _propTypes2.default.array.isRequired,\n  rtl: _propTypes2.default.bool,\n  renderForMeasure: _propTypes2.default.bool,\n  renderHeader: _propTypes2.default.func,\n  container: _propTypes2.default.func,\n  selected: _propTypes2.default.object,\n  selectable: _propTypes2.default.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: _propTypes2.default.number,\n  onShowMore: _propTypes2.default.func,\n  onSelectSlot: _propTypes2.default.func,\n  onSelectEnd: _propTypes2.default.func,\n  onSelectStart: _propTypes2.default.func,\n  dayPropGetter: _propTypes2.default.func,\n  getNow: _propTypes2.default.func.isRequired,\n  startAccessor: _propTypes3.accessor.isRequired,\n  endAccessor: _propTypes3.accessor.isRequired,\n  eventComponent: _propTypes3.elementType,\n  eventWrapperComponent: _propTypes3.elementType.isRequired,\n  dateCellWrapperComponent: _propTypes3.elementType,\n  minRows: _propTypes2.default.number.isRequired,\n  maxRows: _propTypes2.default.number.isRequired\n};\nvar defaultProps = {\n  minRows: 0,\n  maxRows: Infinity\n};\n\nvar DateContentRow = function (_React$Component) {\n  _inherits(DateContentRow, _React$Component);\n\n  function DateContentRow() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DateContentRow);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleSelectSlot = function (slot) {\n      var _this$props = _this.props,\n          range = _this$props.range,\n          onSelectSlot = _this$props.onSelectSlot;\n      onSelectSlot(range.slice(slot.start, slot.end + 1), slot);\n    }, _this.handleShowMore = function (slot) {\n      var _this$props2 = _this.props,\n          range = _this$props2.range,\n          onShowMore = _this$props2.onShowMore;\n      var row = (0, _querySelectorAll2.default)((0, _reactDom.findDOMNode)(_this), '.rbc-row-bg')[0];\n      var cell = void 0;\n      if (row) cell = row.children[slot - 1];\n\n      var events = _this.segments.filter(function (seg) {\n        return isSegmentInSlot(seg, slot);\n      }).map(function (seg) {\n        return seg.event;\n      });\n\n      onShowMore(events, range[slot - 1], cell, slot);\n    }, _this.createHeadingRef = function (r) {\n      _this.headingRow = r;\n    }, _this.createEventRef = function (r) {\n      _this.eventRow = r;\n    }, _this.getContainer = function () {\n      var container = _this.props.container;\n      return container ? container() : (0, _reactDom.findDOMNode)(_this);\n    }, _this.renderHeadingCell = function (date, index) {\n      var _this$props3 = _this.props,\n          renderHeader = _this$props3.renderHeader,\n          getNow = _this$props3.getNow;\n      return renderHeader({\n        date: date,\n        key: 'header_' + index,\n        className: (0, _classnames2.default)('rbc-date-cell', _dates2.default.eq(date, getNow(), 'day') && 'rbc-now')\n      });\n    }, _this.renderDummy = function () {\n      var _this$props4 = _this.props,\n          className = _this$props4.className,\n          range = _this$props4.range,\n          renderHeader = _this$props4.renderHeader;\n      return _react2.default.createElement('div', {\n        className: className\n      }, _react2.default.createElement('div', {\n        className: 'rbc-row-content'\n      }, renderHeader && _react2.default.createElement('div', {\n        className: 'rbc-row',\n        ref: _this.createHeadingRef\n      }, range.map(_this.renderHeadingCell)), _react2.default.createElement('div', {\n        className: 'rbc-row',\n        ref: _this.createEventRef\n      }, _react2.default.createElement('div', {\n        className: 'rbc-row-segment'\n      }, _react2.default.createElement('div', {\n        className: 'rbc-event'\n      }, _react2.default.createElement('div', {\n        className: 'rbc-event-content'\n      }, '\\xA0'))))));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  DateContentRow.prototype.getRowLimit = function getRowLimit() {\n    var eventHeight = (0, _height2.default)(this.eventRow);\n    var headingHeight = this.headingRow ? (0, _height2.default)(this.headingRow) : 0;\n    var eventSpace = (0, _height2.default)((0, _reactDom.findDOMNode)(this)) - headingHeight;\n    return Math.max(Math.floor(eventSpace / eventHeight), 1);\n  };\n\n  DateContentRow.prototype.render = function render() {\n    var _props = this.props,\n        date = _props.date,\n        rtl = _props.rtl,\n        events = _props.events,\n        range = _props.range,\n        className = _props.className,\n        selectable = _props.selectable,\n        dayPropGetter = _props.dayPropGetter,\n        renderForMeasure = _props.renderForMeasure,\n        startAccessor = _props.startAccessor,\n        endAccessor = _props.endAccessor,\n        getNow = _props.getNow,\n        renderHeader = _props.renderHeader,\n        minRows = _props.minRows,\n        maxRows = _props.maxRows,\n        dateCellWrapperComponent = _props.dateCellWrapperComponent,\n        eventComponent = _props.eventComponent,\n        eventWrapperComponent = _props.eventWrapperComponent,\n        onSelectStart = _props.onSelectStart,\n        onSelectEnd = _props.onSelectEnd,\n        longPressThreshold = _props.longPressThreshold,\n        props = _objectWithoutProperties(_props, ['date', 'rtl', 'events', 'range', 'className', 'selectable', 'dayPropGetter', 'renderForMeasure', 'startAccessor', 'endAccessor', 'getNow', 'renderHeader', 'minRows', 'maxRows', 'dateCellWrapperComponent', 'eventComponent', 'eventWrapperComponent', 'onSelectStart', 'onSelectEnd', 'longPressThreshold']);\n\n    if (renderForMeasure) return this.renderDummy();\n\n    var _endOfRange = (0, _eventLevels2.endOfRange)(range),\n        first = _endOfRange.first,\n        last = _endOfRange.last;\n\n    var segments = this.segments = events.map(function (evt) {\n      return (0, _eventLevels2.eventSegments)(evt, first, last, {\n        startAccessor: startAccessor,\n        endAccessor: endAccessor\n      }, range);\n    });\n\n    var _eventLevels = (0, _eventLevels2.eventLevels)(segments, Math.max(maxRows - 1, 1)),\n        levels = _eventLevels.levels,\n        extra = _eventLevels.extra;\n\n    while (levels.length < minRows) {\n      levels.push([]);\n    }\n\n    return _react2.default.createElement('div', {\n      className: className\n    }, _react2.default.createElement(_BackgroundCells2.default, {\n      date: date,\n      getNow: getNow,\n      rtl: rtl,\n      range: range,\n      selectable: selectable,\n      container: this.getContainer,\n      dayPropGetter: dayPropGetter,\n      onSelectStart: onSelectStart,\n      onSelectEnd: onSelectEnd,\n      onSelectSlot: this.handleSelectSlot,\n      cellWrapperComponent: dateCellWrapperComponent,\n      longPressThreshold: longPressThreshold\n    }), _react2.default.createElement('div', {\n      className: 'rbc-row-content'\n    }, renderHeader && _react2.default.createElement('div', {\n      className: 'rbc-row',\n      ref: this.createHeadingRef\n    }, range.map(this.renderHeadingCell)), levels.map(function (segs, idx) {\n      return _react2.default.createElement(_EventRow2.default, _extends({}, props, {\n        key: idx,\n        start: first,\n        end: last,\n        segments: segs,\n        slots: range.length,\n        eventComponent: eventComponent,\n        eventWrapperComponent: eventWrapperComponent,\n        startAccessor: startAccessor,\n        endAccessor: endAccessor\n      }));\n    }), !!extra.length && _react2.default.createElement(_EventEndingRow2.default, _extends({}, props, {\n      start: first,\n      end: last,\n      segments: extra,\n      onShowMore: this.handleShowMore,\n      eventComponent: eventComponent,\n      eventWrapperComponent: eventWrapperComponent,\n      startAccessor: startAccessor,\n      endAccessor: endAccessor\n    }))));\n  };\n\n  return DateContentRow;\n}(_react2.default.Component);\n\nDateContentRow.propTypes = propTypes;\nDateContentRow.defaultProps = defaultProps;\nexports.default = DateContentRow;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}