{"ast":null,"code":"var ReactTreeTableSource = \"import React from \\\"react\\\";\\n// To create random data\\nimport { makeData } from \\\"../utils\\\";\\nimport _ from \\\"lodash\\\";\\n\\n// Import React Table\\nimport ReactTable from \\\"react-table\\\";\\nimport \\\"react-table/react-table.css\\\";\\n\\n// pull in the HOC\\nimport treeTableHOC from \\\"react-table/lib/hoc/treeTable\\\";\\nimport testData from \\\"../data/test-data\\\";\\n\\n// wrap ReacTable in it\\n// the HOC provides the configuration for the TreeTable\\nconst TreeTable = treeTableHOC(ReactTable);\\n\\nfunction getTdProps(state, ri, ci) {\\n  console.log({ state, ri, ci });\\n  return {};\\n}\\n\\n// getTdProps={getTdProps}\\n// Expander={Expander}\\n\\nexport default class Example extends React.Component {\\n  constructor() {\\n    super();\\n    this.state = {\\n      // data: makeData()\\n      data: testData\\n    };\\n  }\\n  render() {\\n    const { data } = this.state;\\n    // now use the new TreeTable component\\n    return (\\n      <div>\\n        <TreeTable\\n          filterable\\n          defaultFilterMethod={(filter, row, column) => {\\n            const id = filter.pivotId || filter.id;\\n            return row[id] !== undefined\\n              ? String(row[id])\\n                  .toLowerCase()\\n                  .includes(filter.value.toLowerCase())\\n              : true;\\n          }}\\n          data={data}\\n          pivotBy={[\\\"state\\\", \\\"post\\\", \\\"city\\\"]}\\n          columns={[\\n            // we only require the accessor so TreeTable\\n            // can handle the pivot automatically\\n            {\\n              accessor: \\\"state\\\"\\n            },\\n            {\\n              accessor: \\\"post\\\"\\n            },\\n            {\\n              accessor: \\\"city\\\"\\n            },\\n\\n            // any other columns we want to display\\n            {\\n              Header: \\\"First Name\\\",\\n              accessor: \\\"first_name\\\"\\n            },\\n            {\\n              Header: \\\"Last Name\\\",\\n              accessor: \\\"last_name\\\"\\n            },\\n            {\\n              Header: \\\"Company Name\\\",\\n              accessor: \\\"company_name\\\"\\n            },\\n            {\\n              Header: \\\"Address\\\",\\n              accessor: \\\"address\\\"\\n            },\\n            {\\n              Header: \\\"Phone 1\\\",\\n              accessor: \\\"phone1\\\"\\n            },\\n            {\\n              Header: \\\"Email\\\",\\n              accessor: \\\"email\\\"\\n            }\\n          ]}\\n          defaultPageSize={10}\\n          SubComponent={row => {\\n            // a SubComponent just for the final detail\\n            const columns = [\\n              {\\n                Header: \\\"Property\\\",\\n                accessor: \\\"property\\\",\\n                width: 200,\\n                Cell: ci => {\\n                  return `${ci.value}:`;\\n                },\\n                style: {\\n                  backgroundColor: \\\"#DDD\\\",\\n                  textAlign: \\\"right\\\",\\n                  fontWeight: \\\"bold\\\"\\n                }\\n              },\\n              { Header: \\\"Value\\\", accessor: \\\"value\\\" }\\n            ];\\n            const rowData = Object.keys(row.original).map(key => {\\n              return {\\n                property: key,\\n                value: row.original[key].toString()\\n              };\\n            });\\n            return (\\n              <div style={{ padding: \\\"10px\\\" }}>\\n                <ReactTable\\n                  data={rowData}\\n                  columns={columns}\\n                  pageSize={rowData.length}\\n                  showPagination={false}\\n                />\\n              </div>\\n            );\\n          }}\\n        />\\n      </div>\\n    );\\n  }\\n}\";\nexport default ReactTreeTableSource;","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/views/tables/example-source/reactTreeTable.js"],"names":["ReactTreeTableSource"],"mappings":"AAAA,IAAMA,oBAAoB,kiHAA1B;AAmIA,eAAeA,oBAAf","sourcesContent":["const ReactTreeTableSource = `import React from \"react\";\n// To create random data\nimport { makeData } from \"../utils\";\nimport _ from \"lodash\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n// pull in the HOC\nimport treeTableHOC from \"react-table/lib/hoc/treeTable\";\nimport testData from \"../data/test-data\";\n\n// wrap ReacTable in it\n// the HOC provides the configuration for the TreeTable\nconst TreeTable = treeTableHOC(ReactTable);\n\nfunction getTdProps(state, ri, ci) {\n  console.log({ state, ri, ci });\n  return {};\n}\n\n// getTdProps={getTdProps}\n// Expander={Expander}\n\nexport default class Example extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // data: makeData()\n      data: testData\n    };\n  }\n  render() {\n    const { data } = this.state;\n    // now use the new TreeTable component\n    return (\n      <div>\n        <TreeTable\n          filterable\n          defaultFilterMethod={(filter, row, column) => {\n            const id = filter.pivotId || filter.id;\n            return row[id] !== undefined\n              ? String(row[id])\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              : true;\n          }}\n          data={data}\n          pivotBy={[\"state\", \"post\", \"city\"]}\n          columns={[\n            // we only require the accessor so TreeTable\n            // can handle the pivot automatically\n            {\n              accessor: \"state\"\n            },\n            {\n              accessor: \"post\"\n            },\n            {\n              accessor: \"city\"\n            },\n\n            // any other columns we want to display\n            {\n              Header: \"First Name\",\n              accessor: \"first_name\"\n            },\n            {\n              Header: \"Last Name\",\n              accessor: \"last_name\"\n            },\n            {\n              Header: \"Company Name\",\n              accessor: \"company_name\"\n            },\n            {\n              Header: \"Address\",\n              accessor: \"address\"\n            },\n            {\n              Header: \"Phone 1\",\n              accessor: \"phone1\"\n            },\n            {\n              Header: \"Email\",\n              accessor: \"email\"\n            }\n          ]}\n          defaultPageSize={10}\n          SubComponent={row => {\n            // a SubComponent just for the final detail\n            const columns = [\n              {\n                Header: \"Property\",\n                accessor: \"property\",\n                width: 200,\n                Cell: ci => {\n                  return \\`\\${ci.value}:\\`;\n                },\n                style: {\n                  backgroundColor: \"#DDD\",\n                  textAlign: \"right\",\n                  fontWeight: \"bold\"\n                }\n              },\n              { Header: \"Value\", accessor: \"value\" }\n            ];\n            const rowData = Object.keys(row.original).map(key => {\n              return {\n                property: key,\n                value: row.original[key].toString()\n              };\n            });\n            return (\n              <div style={{ padding: \"10px\" }}>\n                <ReactTable\n                  data={rowData}\n                  columns={columns}\n                  pageSize={rowData.length}\n                  showPagination={false}\n                />\n              </div>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}`;\n\nexport default ReactTreeTableSource;"]},"metadata":{},"sourceType":"module"}