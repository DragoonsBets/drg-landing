{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _dates = require('./utils/dates');\n\nvar _dates2 = _interopRequireDefault(_dates);\n\nvar _localizer = require('./localizer');\n\nvar _localizer2 = _interopRequireDefault(_localizer);\n\nvar _chunk = require('lodash/chunk');\n\nvar _chunk2 = _interopRequireDefault(_chunk);\n\nvar _constants = require('./utils/constants');\n\nvar _helpers = require('./utils/helpers');\n\nvar _position = require('dom-helpers/query/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _Popup = require('./Popup');\n\nvar _Popup2 = _interopRequireDefault(_Popup);\n\nvar _Overlay = require('react-overlays/lib/Overlay');\n\nvar _Overlay2 = _interopRequireDefault(_Overlay);\n\nvar _DateContentRow = require('./DateContentRow');\n\nvar _DateContentRow2 = _interopRequireDefault(_DateContentRow);\n\nvar _Header = require('./Header');\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nvar _DateHeader = require('./DateHeader');\n\nvar _DateHeader2 = _interopRequireDefault(_DateHeader);\n\nvar _propTypes3 = require('./utils/propTypes');\n\nvar _eventLevels = require('./utils/eventLevels');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar eventsForWeek = function eventsForWeek(evts, start, end, props) {\n  return evts.filter(function (e) {\n    return (0, _eventLevels.inRange)(e, start, end, props);\n  });\n};\n\nvar propTypes = {\n  events: _propTypes2.default.array.isRequired,\n  date: _propTypes2.default.instanceOf(Date),\n  min: _propTypes2.default.instanceOf(Date),\n  max: _propTypes2.default.instanceOf(Date),\n  step: _propTypes2.default.number,\n  getNow: _propTypes2.default.func.isRequired,\n  scrollToTime: _propTypes2.default.instanceOf(Date),\n  eventPropGetter: _propTypes2.default.func,\n  dayPropGetter: _propTypes2.default.func,\n  culture: _propTypes2.default.string,\n  dayFormat: _propTypes3.dateFormat,\n  rtl: _propTypes2.default.bool,\n  width: _propTypes2.default.number,\n  titleAccessor: _propTypes3.accessor.isRequired,\n  tooltipAccessor: _propTypes3.accessor.isRequired,\n  allDayAccessor: _propTypes3.accessor.isRequired,\n  startAccessor: _propTypes3.accessor.isRequired,\n  endAccessor: _propTypes3.accessor.isRequired,\n  selected: _propTypes2.default.object,\n  selectable: _propTypes2.default.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: _propTypes2.default.number,\n  onNavigate: _propTypes2.default.func,\n  onSelectSlot: _propTypes2.default.func,\n  onSelectEvent: _propTypes2.default.func,\n  onDoubleClickEvent: _propTypes2.default.func,\n  onShowMore: _propTypes2.default.func,\n  onDrillDown: _propTypes2.default.func,\n  getDrilldownView: _propTypes2.default.func.isRequired,\n  dateFormat: _propTypes3.dateFormat,\n  weekdayFormat: _propTypes3.dateFormat,\n  popup: _propTypes2.default.bool,\n  messages: _propTypes2.default.object,\n  components: _propTypes2.default.object.isRequired,\n  popupOffset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({\n    x: _propTypes2.default.number,\n    y: _propTypes2.default.number\n  })])\n};\n\nvar MonthView = function (_React$Component) {\n  _inherits(MonthView, _React$Component);\n\n  function MonthView() {\n    _classCallCheck(this, MonthView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    _this._bgRows = [];\n    _this._pendingSelection = [];\n    _this.state = {\n      rowLimit: 5,\n      needLimitMeasure: true\n    };\n    return _this;\n  }\n\n  MonthView.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref) {\n    var date = _ref.date;\n    this.setState({\n      needLimitMeasure: !_dates2.default.eq(date, this.props.date)\n    });\n  };\n\n  MonthView.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var running = void 0;\n    if (this.state.needLimitMeasure) this.measureRowLimit(this.props);\n    window.addEventListener('resize', this._resizeListener = function () {\n      if (!running) {\n        (0, _requestAnimationFrame2.default)(function () {\n          running = false;\n\n          _this2.setState({\n            needLimitMeasure: true\n          }); //eslint-disable-line\n\n        });\n      }\n    }, false);\n  };\n\n  MonthView.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.state.needLimitMeasure) this.measureRowLimit(this.props);\n  };\n\n  MonthView.prototype.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this._resizeListener, false);\n  };\n\n  MonthView.prototype.render = function render() {\n    var _props = this.props,\n        date = _props.date,\n        culture = _props.culture,\n        weekdayFormat = _props.weekdayFormat,\n        className = _props.className,\n        month = _dates2.default.visibleDays(date, culture),\n        weeks = (0, _chunk2.default)(month, 7);\n\n    this._weekCount = weeks.length;\n    return _react2.default.createElement('div', {\n      className: (0, _classnames2.default)('rbc-month-view', className)\n    }, _react2.default.createElement('div', {\n      className: 'rbc-row rbc-month-header'\n    }, this.renderHeaders(weeks[0], weekdayFormat, culture)), weeks.map(this.renderWeek), this.props.popup && this.renderOverlay());\n  };\n\n  MonthView.prototype.renderHeaders = function renderHeaders(row, format, culture) {\n    var first = row[0];\n    var last = row[row.length - 1];\n    var HeaderComponent = this.props.components.header || _Header2.default;\n    return _dates2.default.range(first, last, 'day').map(function (day, idx) {\n      return _react2.default.createElement('div', {\n        key: 'header_' + idx,\n        className: 'rbc-header'\n      }, _react2.default.createElement(HeaderComponent, {\n        date: day,\n        label: _localizer2.default.format(day, format, culture),\n        localizer: _localizer2.default,\n        format: format,\n        culture: culture\n      }));\n    });\n  };\n\n  MonthView.prototype.renderOverlay = function renderOverlay() {\n    var _this3 = this;\n\n    var overlay = this.state && this.state.overlay || {};\n    var components = this.props.components;\n    return _react2.default.createElement(_Overlay2.default, {\n      rootClose: true,\n      placement: 'bottom',\n      container: this,\n      show: !!overlay.position,\n      onHide: function onHide() {\n        return _this3.setState({\n          overlay: null\n        });\n      }\n    }, _react2.default.createElement(_Popup2.default, _extends({}, this.props, {\n      eventComponent: components.event,\n      eventWrapperComponent: components.eventWrapper,\n      position: overlay.position,\n      events: overlay.events,\n      slotStart: overlay.date,\n      slotEnd: overlay.end,\n      onSelect: this.handleSelectEvent,\n      onDoubleClick: this.handleDoubleClickEvent\n    })));\n  };\n\n  MonthView.prototype.measureRowLimit = function measureRowLimit() {\n    this.setState({\n      needLimitMeasure: false,\n      rowLimit: this.refs.slotRow.getRowLimit()\n    });\n  };\n\n  MonthView.prototype.selectDates = function selectDates(slotInfo) {\n    var slots = this._pendingSelection.slice();\n\n    this._pendingSelection = [];\n    slots.sort(function (a, b) {\n      return +a - +b;\n    });\n    (0, _helpers.notify)(this.props.onSelectSlot, {\n      slots: slots,\n      start: slots[0],\n      end: slots[slots.length - 1],\n      action: slotInfo.action\n    });\n  };\n\n  MonthView.prototype.clearSelection = function clearSelection() {\n    clearTimeout(this._selectTimer);\n    this._pendingSelection = [];\n  };\n\n  return MonthView;\n}(_react2.default.Component);\n\nMonthView.displayName = 'MonthView';\nMonthView.propTypes = propTypes;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.getContainer = function () {\n    return (0, _reactDom.findDOMNode)(_this4);\n  };\n\n  this.renderWeek = function (week, weekIdx) {\n    var _props2 = _this4.props,\n        events = _props2.events,\n        components = _props2.components,\n        selectable = _props2.selectable,\n        titleAccessor = _props2.titleAccessor,\n        tooltipAccessor = _props2.tooltipAccessor,\n        startAccessor = _props2.startAccessor,\n        endAccessor = _props2.endAccessor,\n        allDayAccessor = _props2.allDayAccessor,\n        getNow = _props2.getNow,\n        eventPropGetter = _props2.eventPropGetter,\n        dayPropGetter = _props2.dayPropGetter,\n        messages = _props2.messages,\n        selected = _props2.selected,\n        date = _props2.date,\n        longPressThreshold = _props2.longPressThreshold;\n    var _state = _this4.state,\n        needLimitMeasure = _state.needLimitMeasure,\n        rowLimit = _state.rowLimit;\n    events = eventsForWeek(events, week[0], week[week.length - 1], _this4.props);\n    events.sort(function (a, b) {\n      return (0, _eventLevels.sortEvents)(a, b, _this4.props);\n    });\n    return _react2.default.createElement(_DateContentRow2.default, {\n      key: weekIdx,\n      ref: weekIdx === 0 ? 'slotRow' : undefined,\n      container: _this4.getContainer,\n      className: 'rbc-month-row',\n      getNow: getNow,\n      date: date,\n      range: week,\n      events: events,\n      maxRows: rowLimit,\n      selected: selected,\n      selectable: selectable,\n      messages: messages,\n      titleAccessor: titleAccessor,\n      tooltipAccessor: tooltipAccessor,\n      startAccessor: startAccessor,\n      endAccessor: endAccessor,\n      allDayAccessor: allDayAccessor,\n      eventPropGetter: eventPropGetter,\n      dayPropGetter: dayPropGetter,\n      renderHeader: _this4.readerDateHeading,\n      renderForMeasure: needLimitMeasure,\n      onShowMore: _this4.handleShowMore,\n      onSelect: _this4.handleSelectEvent,\n      onDoubleClick: _this4.handleDoubleClickEvent,\n      onSelectSlot: _this4.handleSelectSlot,\n      eventComponent: components.event,\n      eventWrapperComponent: components.eventWrapper,\n      dateCellWrapperComponent: components.dateCellWrapper,\n      longPressThreshold: longPressThreshold\n    });\n  };\n\n  this.readerDateHeading = function (_ref4) {\n    var date = _ref4.date,\n        className = _ref4.className,\n        props = _objectWithoutProperties(_ref4, ['date', 'className']);\n\n    var _props3 = _this4.props,\n        currentDate = _props3.date,\n        getDrilldownView = _props3.getDrilldownView,\n        dateFormat = _props3.dateFormat,\n        culture = _props3.culture;\n\n    var isOffRange = _dates2.default.month(date) !== _dates2.default.month(currentDate);\n\n    var isCurrent = _dates2.default.eq(date, currentDate, 'day');\n\n    var drilldownView = getDrilldownView(date);\n\n    var label = _localizer2.default.format(date, dateFormat, culture);\n\n    var DateHeaderComponent = _this4.props.components.dateHeader || _DateHeader2.default;\n    return _react2.default.createElement('div', _extends({}, props, {\n      className: (0, _classnames2.default)(className, isOffRange && 'rbc-off-range', isCurrent && 'rbc-current')\n    }), _react2.default.createElement(DateHeaderComponent, {\n      label: label,\n      date: date,\n      drilldownView: drilldownView,\n      isOffRange: isOffRange,\n      onDrillDown: function onDrillDown(e) {\n        return _this4.handleHeadingClick(date, drilldownView, e);\n      }\n    }));\n  };\n\n  this.handleSelectSlot = function (range, slotInfo) {\n    _this4._pendingSelection = _this4._pendingSelection.concat(range);\n    clearTimeout(_this4._selectTimer);\n    _this4._selectTimer = setTimeout(function () {\n      return _this4.selectDates(slotInfo);\n    });\n  };\n\n  this.handleHeadingClick = function (date, view, e) {\n    e.preventDefault();\n\n    _this4.clearSelection();\n\n    (0, _helpers.notify)(_this4.props.onDrillDown, [date, view]);\n  };\n\n  this.handleSelectEvent = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this4.clearSelection();\n\n    (0, _helpers.notify)(_this4.props.onSelectEvent, args);\n  };\n\n  this.handleDoubleClickEvent = function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this4.clearSelection();\n\n    (0, _helpers.notify)(_this4.props.onDoubleClickEvent, args);\n  };\n\n  this.handleShowMore = function (events, date, cell, slot) {\n    var _props4 = _this4.props,\n        popup = _props4.popup,\n        onDrillDown = _props4.onDrillDown,\n        onShowMore = _props4.onShowMore,\n        getDrilldownView = _props4.getDrilldownView; //cancel any pending selections so only the event click goes through.\n\n    _this4.clearSelection();\n\n    if (popup) {\n      var position = (0, _position2.default)(cell, (0, _reactDom.findDOMNode)(_this4));\n\n      _this4.setState({\n        overlay: {\n          date: date,\n          events: events,\n          position: position\n        }\n      });\n    } else {\n      (0, _helpers.notify)(onDrillDown, [date, getDrilldownView(date) || _constants.views.DAY]);\n    }\n\n    (0, _helpers.notify)(onShowMore, [events, date, slot]);\n  };\n};\n\nMonthView.range = function (date, _ref2) {\n  var culture = _ref2.culture;\n\n  var start = _dates2.default.firstVisibleDay(date, culture);\n\n  var end = _dates2.default.lastVisibleDay(date, culture);\n\n  return {\n    start: start,\n    end: end\n  };\n};\n\nMonthView.navigate = function (date, action) {\n  switch (action) {\n    case _constants.navigate.PREVIOUS:\n      return _dates2.default.add(date, -1, 'month');\n\n    case _constants.navigate.NEXT:\n      return _dates2.default.add(date, 1, 'month');\n\n    default:\n      return date;\n  }\n};\n\nMonthView.title = function (date, _ref3) {\n  var formats = _ref3.formats,\n      culture = _ref3.culture;\n  return _localizer2.default.format(date, formats.monthHeaderFormat, culture);\n};\n\nexports.default = MonthView;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}