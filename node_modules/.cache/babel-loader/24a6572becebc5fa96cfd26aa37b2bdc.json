{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Selection = require('./Selection');\n\nvar _Selection2 = _interopRequireDefault(_Selection);\n\nvar _dates = require('./utils/dates');\n\nvar _dates2 = _interopRequireDefault(_dates);\n\nvar _TimeSlots = require('./utils/TimeSlots');\n\nvar TimeSlotUtils = _interopRequireWildcard(_TimeSlots);\n\nvar _selection = require('./utils/selection');\n\nvar _localizer = require('./localizer');\n\nvar _localizer2 = _interopRequireDefault(_localizer);\n\nvar _helpers = require('./utils/helpers');\n\nvar _propTypes3 = require('./utils/propTypes');\n\nvar _accessors = require('./utils/accessors');\n\nvar _DayEventLayout = require('./utils/DayEventLayout');\n\nvar DayEventLayout = _interopRequireWildcard(_DayEventLayout);\n\nvar _TimeSlotGroup = require('./TimeSlotGroup');\n\nvar _TimeSlotGroup2 = _interopRequireDefault(_TimeSlotGroup);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DayColumn = function (_React$Component) {\n  _inherits(DayColumn, _React$Component);\n\n  function DayColumn() {\n    _classCallCheck(this, DayColumn);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    _this.slotMetrics = TimeSlotUtils.getSlotMetrics(_this.props);\n    return _this;\n  }\n\n  DayColumn.prototype.componentDidMount = function componentDidMount() {\n    this.props.selectable && this._selectable();\n  };\n\n  DayColumn.prototype.componentWillUnmount = function componentWillUnmount() {\n    this._teardownSelectable();\n  };\n\n  DayColumn.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.selectable && !this.props.selectable) this._selectable();\n    if (!nextProps.selectable && this.props.selectable) this._teardownSelectable();\n    this.slotMetrics = this.slotMetrics.update(nextProps);\n  };\n\n  DayColumn.prototype.render = function render() {\n    var _props = this.props,\n        max = _props.max,\n        rtl = _props.rtl,\n        date = _props.date,\n        getNow = _props.getNow,\n        selectRangeFormat = _props.selectRangeFormat,\n        culture = _props.culture,\n        slotPropGetter = _props.slotPropGetter,\n        resource = _props.resource,\n        timeSlotWrapperComponent = _props.timeSlotWrapperComponent,\n        dayPropGetter = _props.dayPropGetter;\n    var slotMetrics = this.slotMetrics;\n    var _state = this.state,\n        selecting = _state.selecting,\n        top = _state.top,\n        height = _state.height,\n        startDate = _state.startDate,\n        endDate = _state.endDate;\n    var selectDates = {\n      start: startDate,\n      end: endDate\n    };\n\n    var _ref = dayPropGetter && dayPropGetter(max) || {},\n        className = _ref.className,\n        style = _ref.style;\n\n    var current = getNow();\n    return _react2.default.createElement('div', {\n      style: style,\n      className: (0, _classnames2.default)(className, 'rbc-day-slot', 'rbc-time-column', selecting && 'rbc-slot-selecting', _dates2.default.eq(date, current, 'day') && 'rbc-today')\n    }, slotMetrics.groups.map(function (grp, idx) {\n      return _react2.default.createElement(_TimeSlotGroup2.default, {\n        key: idx,\n        group: grp,\n        resource: resource,\n        slotPropGetter: slotPropGetter,\n        timeSlotWrapperComponent: timeSlotWrapperComponent\n      });\n    }), _react2.default.createElement('div', {\n      className: (0, _classnames2.default)('rbc-events-container', rtl && 'rtl')\n    }, this.renderEvents()), selecting && _react2.default.createElement('div', {\n      className: 'rbc-slot-selection',\n      style: {\n        top: top,\n        height: height\n      }\n    }, _react2.default.createElement('span', null, _localizer2.default.format(selectDates, selectRangeFormat, culture))));\n  };\n\n  return DayColumn;\n}(_react2.default.Component);\n\nDayColumn.propTypes = {\n  events: _propTypes2.default.array.isRequired,\n  components: _propTypes2.default.object,\n  step: _propTypes2.default.number.isRequired,\n  date: _propTypes2.default.instanceOf(Date).isRequired,\n  min: _propTypes2.default.instanceOf(Date).isRequired,\n  max: _propTypes2.default.instanceOf(Date).isRequired,\n  getNow: _propTypes2.default.func.isRequired,\n  rtl: _propTypes2.default.bool,\n  titleAccessor: _propTypes3.accessor,\n  tooltipAccessor: _propTypes3.accessor,\n  allDayAccessor: _propTypes3.accessor.isRequired,\n  startAccessor: _propTypes3.accessor.isRequired,\n  endAccessor: _propTypes3.accessor.isRequired,\n  selectRangeFormat: _propTypes3.dateFormat,\n  eventTimeRangeFormat: _propTypes3.dateFormat,\n  eventTimeRangeStartFormat: _propTypes3.dateFormat,\n  eventTimeRangeEndFormat: _propTypes3.dateFormat,\n  showMultiDayTimes: _propTypes2.default.bool,\n  culture: _propTypes2.default.string,\n  timeslots: _propTypes2.default.number,\n  messages: _propTypes2.default.object,\n  selected: _propTypes2.default.object,\n  selectable: _propTypes2.default.oneOf([true, false, 'ignoreEvents']),\n  eventOffset: _propTypes2.default.number,\n  longPressThreshold: _propTypes2.default.number,\n  onSelecting: _propTypes2.default.func,\n  onSelectSlot: _propTypes2.default.func.isRequired,\n  onSelectEvent: _propTypes2.default.func.isRequired,\n  onDoubleClickEvent: _propTypes2.default.func.isRequired,\n  className: _propTypes2.default.string,\n  dragThroughEvents: _propTypes2.default.bool,\n  eventPropGetter: _propTypes2.default.func,\n  dayPropGetter: _propTypes2.default.func,\n  slotPropGetter: _propTypes2.default.func,\n  timeSlotWrapperComponent: _propTypes3.elementType,\n  eventComponent: _propTypes3.elementType,\n  eventWrapperComponent: _propTypes3.elementType.isRequired,\n  resource: _propTypes2.default.any\n};\nDayColumn.defaultProps = {\n  dragThroughEvents: true,\n  timeslots: 2\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    selecting: false\n  };\n\n  this.renderEvents = function () {\n    var _props2 = _this2.props,\n        EventComponent = _props2.components.event,\n        culture = _props2.culture,\n        endAccessor = _props2.endAccessor,\n        eventPropGetter = _props2.eventPropGetter,\n        eventTimeRangeEndFormat = _props2.eventTimeRangeEndFormat,\n        eventTimeRangeFormat = _props2.eventTimeRangeFormat,\n        eventTimeRangeStartFormat = _props2.eventTimeRangeStartFormat,\n        EventWrapper = _props2.eventWrapperComponent,\n        events = _props2.events,\n        max = _props2.max,\n        messages = _props2.messages,\n        min = _props2.min,\n        isRtl = _props2.rtl,\n        selected = _props2.selected,\n        startAccessor = _props2.startAccessor,\n        titleAccessor = _props2.titleAccessor,\n        tooltipAccessor = _props2.tooltipAccessor;\n    var styledEvents = DayEventLayout.getStyledEvents({\n      events: events,\n      startAccessor: startAccessor,\n      endAccessor: endAccessor,\n      slotMetrics: _this2.slotMetrics\n    });\n    return styledEvents.map(function (_ref2, idx) {\n      var _extends2;\n\n      var event = _ref2.event,\n          style = _ref2.style;\n      var _eventTimeRangeFormat = eventTimeRangeFormat;\n      var _continuesPrior = false;\n      var _continuesAfter = false;\n      var start = (0, _accessors.accessor)(event, startAccessor);\n      var end = (0, _accessors.accessor)(event, endAccessor);\n\n      if (start < min) {\n        start = min;\n        _continuesPrior = true;\n        _eventTimeRangeFormat = eventTimeRangeEndFormat;\n      }\n\n      if (end > max) {\n        end = max;\n        _continuesAfter = true;\n        _eventTimeRangeFormat = eventTimeRangeStartFormat;\n      }\n\n      var continuesPrior = _this2.slotMetrics.startsBefore(start);\n\n      var continuesAfter = _this2.slotMetrics.startsAfter(end);\n\n      var title = (0, _accessors.accessor)(event, titleAccessor);\n      var tooltip = (0, _accessors.accessor)(event, tooltipAccessor);\n      var label = void 0;\n\n      if (_continuesPrior && _continuesAfter) {\n        label = messages.allDay;\n      } else {\n        label = _localizer2.default.format({\n          start: start,\n          end: end\n        }, _eventTimeRangeFormat, culture);\n      }\n\n      var _isSelected = (0, _selection.isSelected)(event, selected);\n\n      if (eventPropGetter) var _eventPropGetter = eventPropGetter(event, start, end, _isSelected),\n          xStyle = _eventPropGetter.style,\n          className = _eventPropGetter.className;\n      var height = style.height,\n          top = style.top,\n          width = style.width,\n          xOffset = style.xOffset;\n      var wrapperProps = {\n        event: event,\n        continuesPrior: _continuesPrior,\n        continuesAfter: _continuesAfter\n      };\n      return _react2.default.createElement(EventWrapper, _extends({}, wrapperProps, {\n        key: 'evt_' + idx\n      }), _react2.default.createElement('div', {\n        style: _extends({}, xStyle, (_extends2 = {\n          top: top + '%',\n          height: height + '%'\n        }, _extends2[isRtl ? 'right' : 'left'] = Math.max(0, xOffset) + '%', _extends2.width = width + '%', _extends2)),\n        title: tooltip ? (typeof label === 'string' ? label + ': ' : '') + tooltip : undefined,\n        onClick: function onClick(e) {\n          return _this2._select(event, e);\n        },\n        onDoubleClick: function onDoubleClick(e) {\n          return _this2._doubleClick(event, e);\n        },\n        className: (0, _classnames2.default)('rbc-event', className, {\n          'rbc-selected': _isSelected,\n          'rbc-event-continues-earlier': continuesPrior,\n          'rbc-event-continues-later': continuesAfter,\n          'rbc-event-continues-day-prior': _continuesPrior,\n          'rbc-event-continues-day-after': _continuesAfter\n        })\n      }, _react2.default.createElement('div', {\n        className: 'rbc-event-label'\n      }, label), _react2.default.createElement('div', {\n        className: 'rbc-event-content'\n      }, EventComponent ? _react2.default.createElement(EventComponent, {\n        event: event,\n        title: title\n      }) : title)));\n    });\n  };\n\n  this._selectable = function () {\n    var node = (0, _reactDom.findDOMNode)(_this2);\n    var selector = _this2._selector = new _Selection2.default(function () {\n      return (0, _reactDom.findDOMNode)(_this2);\n    }, {\n      longPressThreshold: _this2.props.longPressThreshold\n    });\n\n    var maybeSelect = function maybeSelect(box) {\n      var onSelecting = _this2.props.onSelecting;\n      var current = _this2.state || {};\n      var state = selectionState(box);\n      var start = state.startDate,\n          end = state.endDate;\n\n      if (onSelecting) {\n        if (_dates2.default.eq(current.startDate, start, 'minutes') && _dates2.default.eq(current.endDate, end, 'minutes') || onSelecting({\n          start: start,\n          end: end\n        }) === false) return;\n      }\n\n      if (_this2.state.start !== state.start || _this2.state.end !== state.end || _this2.state.selecting !== state.selecting) {\n        _this2.setState(state);\n      }\n    };\n\n    var selectionState = function selectionState(_ref3) {\n      var y = _ref3.y;\n\n      var _getBoundsForNode = (0, _Selection.getBoundsForNode)(node),\n          top = _getBoundsForNode.top,\n          bottom = _getBoundsForNode.bottom;\n\n      var range = Math.abs(top - bottom);\n\n      var currentSlot = _this2.slotMetrics.closestSlotToPosition((y - top) / range);\n\n      if (!_this2.state.selecting) _this2._initialSlot = currentSlot;\n      var initialSlot = _this2._initialSlot;\n      if (initialSlot === currentSlot) currentSlot = _this2.slotMetrics.nextSlot(initialSlot);\n\n      var selectRange = _this2.slotMetrics.getRange(_dates2.default.min(initialSlot, currentSlot), _dates2.default.max(initialSlot, currentSlot));\n\n      return _extends({}, selectRange, {\n        selecting: true,\n        top: selectRange.top + '%',\n        height: selectRange.height + '%'\n      });\n    };\n\n    var selectorClicksHandler = function selectorClicksHandler(box, actionType) {\n      if (!(0, _Selection.isEvent)((0, _reactDom.findDOMNode)(_this2), box)) {\n        var _selectionState = selectionState(box),\n            startDate = _selectionState.startDate,\n            endDate = _selectionState.endDate;\n\n        _this2._selectSlot({\n          startDate: startDate,\n          endDate: endDate,\n          action: actionType,\n          box: box\n        });\n      }\n\n      _this2.setState({\n        selecting: false\n      });\n    };\n\n    selector.on('selecting', maybeSelect);\n    selector.on('selectStart', maybeSelect);\n    selector.on('beforeSelect', function (box) {\n      if (_this2.props.selectable !== 'ignoreEvents') return;\n      return !(0, _Selection.isEvent)((0, _reactDom.findDOMNode)(_this2), box);\n    });\n    selector.on('click', function (box) {\n      return selectorClicksHandler(box, 'click');\n    });\n    selector.on('doubleClick', function (box) {\n      return selectorClicksHandler(box, 'doubleClick');\n    });\n    selector.on('select', function (bounds) {\n      if (_this2.state.selecting) {\n        _this2._selectSlot(_extends({}, _this2.state, {\n          action: 'select',\n          bounds: bounds\n        }));\n\n        _this2.setState({\n          selecting: false\n        });\n      }\n    });\n  };\n\n  this._teardownSelectable = function () {\n    if (!_this2._selector) return;\n\n    _this2._selector.teardown();\n\n    _this2._selector = null;\n  };\n\n  this._selectSlot = function (_ref4) {\n    var startDate = _ref4.startDate,\n        endDate = _ref4.endDate,\n        action = _ref4.action,\n        bounds = _ref4.bounds,\n        box = _ref4.box;\n    var current = startDate,\n        slots = [];\n\n    while (_dates2.default.lte(current, endDate)) {\n      slots.push(current);\n      current = _dates2.default.add(current, _this2.props.step, 'minutes');\n    }\n\n    (0, _helpers.notify)(_this2.props.onSelectSlot, {\n      slots: slots,\n      start: startDate,\n      end: endDate,\n      resourceId: _this2.props.resource,\n      action: action,\n      bounds: bounds,\n      box: box\n    });\n  };\n\n  this._select = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    (0, _helpers.notify)(_this2.props.onSelectEvent, args);\n  };\n\n  this._doubleClick = function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    (0, _helpers.notify)(_this2.props.onDoubleClickEvent, args);\n  };\n};\n\nexports.default = DayColumn;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}