{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.formats = undefined;\n\nexports.default = function (globalize) {\n  function getCulture(culture) {\n    return culture ? globalize.findClosestCulture(culture) : globalize.culture();\n  }\n\n  function firstOfWeek(culture) {\n    culture = getCulture(culture);\n    return culture && culture.calendar.firstDay || 0;\n  }\n\n  (0, _formats.set)(formats);\n  return (0, _localizer.set)({\n    firstOfWeek: firstOfWeek,\n    parse: function parse(value, format, culture) {\n      return globalize.parseDate(value, format, culture);\n    },\n    format: function format(value, _format, culture) {\n      return globalize.format(value, _format, culture);\n    }\n  });\n};\n\nvar _dates = require('../utils/dates');\n\nvar _dates2 = _interopRequireDefault(_dates);\n\nvar _formats = require('../formats');\n\nvar _localizer = require('../localizer');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar dateRangeFormat = function dateRangeFormat(_ref, culture, local) {\n  var start = _ref.start,\n      end = _ref.end;\n  return local.format(start, 'd', culture) + ' — ' + local.format(end, 'd', culture);\n};\n\nvar timeRangeFormat = function timeRangeFormat(_ref2, culture, local) {\n  var start = _ref2.start,\n      end = _ref2.end;\n  return local.format(start, 't', culture) + ' — ' + local.format(end, 't', culture);\n};\n\nvar timeRangeStartFormat = function timeRangeStartFormat(_ref3, culture, local) {\n  var start = _ref3.start,\n      end = _ref3.end;\n  return local.format(start, 't', culture) + ' — ';\n};\n\nvar timeRangeEndFormat = function timeRangeEndFormat(_ref4, culture, local) {\n  var start = _ref4.start,\n      end = _ref4.end;\n  return ' — ' + local.format(end, 't', culture);\n};\n\nvar weekRangeFormat = function weekRangeFormat(_ref5, culture, local) {\n  var start = _ref5.start,\n      end = _ref5.end;\n  return local.format(start, 'MMM dd', culture) + ' - ' + local.format(end, _dates2.default.eq(start, end, 'month') ? 'dd' : 'MMM dd', culture);\n};\n\nvar formats = exports.formats = {\n  dateFormat: 'dd',\n  dayFormat: 'ddd dd/MM',\n  weekdayFormat: 'ddd',\n  selectRangeFormat: timeRangeFormat,\n  eventTimeRangeFormat: timeRangeFormat,\n  eventTimeRangeStartFormat: timeRangeStartFormat,\n  eventTimeRangeEndFormat: timeRangeEndFormat,\n  timeGutterFormat: 't',\n  monthHeaderFormat: 'Y',\n  dayHeaderFormat: 'dddd MMM dd',\n  dayRangeHeaderFormat: weekRangeFormat,\n  agendaHeaderFormat: dateRangeFormat,\n  agendaDateFormat: 'ddd MMM dd',\n  agendaTimeFormat: 't',\n  agendaTimeRangeFormat: timeRangeFormat\n};","map":null,"metadata":{},"sourceType":"script"}