{"ast":null,"code":"import _classCallCheck from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react/src/views/tables/examples/reactTreeTable.js\";\nimport React from \"react\"; // To create random data\n// import _ from \"lodash\";\n// Import React Table\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\"; // pull in the HOC\n\nimport treeTableHOC from \"react-table/lib/hoc/treeTable\";\nimport testData from \"../data/test-data\"; // wrap ReacTable in it\n// the HOC provides the configuration for the TreeTable\n\nvar TreeTable = treeTableHOC(ReactTable); // function getTdProps(state, ri, ci) {\n//   console.log({ state, ri, ci });\n//   return {};\n// }\n// getTdProps={getTdProps}\n// Expander={Expander}\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this));\n    _this.state = {\n      data: testData\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data; // now use the new TreeTable component\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(TreeTable, {\n        filterable: true,\n        defaultFilterMethod: function defaultFilterMethod(filter, row, column) {\n          var id = filter.pivotId || filter.id;\n          return row[id] !== undefined ? String(row[id]).toLowerCase().includes(filter.value.toLowerCase()) : true;\n        },\n        data: data,\n        pivotBy: [\"state\", \"post\", \"city\"],\n        columns: [// we only require the accessor so TreeTable\n        // can handle the pivot automatically\n        {\n          accessor: \"state\"\n        }, {\n          accessor: \"post\"\n        }, {\n          accessor: \"city\"\n        }, // any other columns we want to display\n        {\n          Header: \"First Name\",\n          accessor: \"first_name\"\n        }, {\n          Header: \"Last Name\",\n          accessor: \"last_name\"\n        }, {\n          Header: \"Company Name\",\n          accessor: \"company_name\"\n        }, {\n          Header: \"Address\",\n          accessor: \"address\"\n        }, {\n          Header: \"Phone 1\",\n          accessor: \"phone1\"\n        }, {\n          Header: \"Email\",\n          accessor: \"email\"\n        }],\n        defaultPageSize: 10,\n        SubComponent: function SubComponent(row) {\n          // a SubComponent just for the final detail\n          var columns = [{\n            Header: \"Property\",\n            accessor: \"property\",\n            width: 200,\n            Cell: function Cell(ci) {\n              return \"\".concat(ci.value, \":\");\n            },\n            style: {\n              backgroundColor: \"#DDD\",\n              textAlign: \"right\",\n              fontWeight: \"bold\"\n            }\n          }, {\n            Header: \"Value\",\n            accessor: \"value\"\n          }];\n          var rowData = Object.keys(row.original).map(function (key) {\n            return {\n              property: key,\n              value: row.original[key].toString()\n            };\n          });\n          return React.createElement(\"div\", {\n            style: {\n              padding: \"10px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(ReactTable, {\n            data: rowData,\n            columns: columns,\n            pageSize: rowData.length,\n            showPagination: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/views/tables/examples/reactTreeTable.js"],"names":["React","ReactTable","treeTableHOC","testData","TreeTable","Example","state","data","filter","row","column","id","pivotId","undefined","String","toLowerCase","includes","value","accessor","Header","columns","width","Cell","ci","style","backgroundColor","textAlign","fontWeight","rowData","Object","keys","original","map","key","property","toString","padding","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAEA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;AACA;;AACA,IAAMC,SAAS,GAAGF,YAAY,CAACD,UAAD,CAA9B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;;IAEqBI,O;;;;;AACnB,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEJ;AADK,KAAb;AAFY;AAKb;;;;6BACQ;AAAA,UACCI,IADD,GACU,KAAKD,KADf,CACCC,IADD,EAEP;;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,mBAAmB,EAAE,6BAACC,MAAD,EAASC,GAAT,EAAcC,MAAd,EAAyB;AAC5C,cAAMC,EAAE,GAAGH,MAAM,CAACI,OAAP,IAAkBJ,MAAM,CAACG,EAApC;AACA,iBAAOF,GAAG,CAACE,EAAD,CAAH,KAAYE,SAAZ,GACHC,MAAM,CAACL,GAAG,CAACE,EAAD,CAAJ,CAAN,CACGI,WADH,GAEGC,QAFH,CAEYR,MAAM,CAACS,KAAP,CAAaF,WAAb,EAFZ,CADG,GAIH,IAJJ;AAKD,SATH;AAUE,QAAA,IAAI,EAAER,IAVR;AAWE,QAAA,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,CAXX;AAYE,QAAA,OAAO,EAAE,CACP;AACA;AACA;AACEW,UAAAA,QAAQ,EAAE;AADZ,SAHO,EAMP;AACEA,UAAAA,QAAQ,EAAE;AADZ,SANO,EASP;AACEA,UAAAA,QAAQ,EAAE;AADZ,SATO,EAaP;AACA;AACEC,UAAAA,MAAM,EAAE,YADV;AAEED,UAAAA,QAAQ,EAAE;AAFZ,SAdO,EAkBP;AACEC,UAAAA,MAAM,EAAE,WADV;AAEED,UAAAA,QAAQ,EAAE;AAFZ,SAlBO,EAsBP;AACEC,UAAAA,MAAM,EAAE,cADV;AAEED,UAAAA,QAAQ,EAAE;AAFZ,SAtBO,EA0BP;AACEC,UAAAA,MAAM,EAAE,SADV;AAEED,UAAAA,QAAQ,EAAE;AAFZ,SA1BO,EA8BP;AACEC,UAAAA,MAAM,EAAE,SADV;AAEED,UAAAA,QAAQ,EAAE;AAFZ,SA9BO,EAkCP;AACEC,UAAAA,MAAM,EAAE,OADV;AAEED,UAAAA,QAAQ,EAAE;AAFZ,SAlCO,CAZX;AAmDE,QAAA,eAAe,EAAE,EAnDnB;AAoDE,QAAA,YAAY,EAAE,sBAAAT,GAAG,EAAI;AACnB;AACA,cAAMW,OAAO,GAAG,CACd;AACED,YAAAA,MAAM,EAAE,UADV;AAEED,YAAAA,QAAQ,EAAE,UAFZ;AAGEG,YAAAA,KAAK,EAAE,GAHT;AAIEC,YAAAA,IAAI,EAAE,cAAAC,EAAE,EAAI;AACV,+BAAUA,EAAE,CAACN,KAAb;AACD,aANH;AAOEO,YAAAA,KAAK,EAAE;AACLC,cAAAA,eAAe,EAAE,MADZ;AAELC,cAAAA,SAAS,EAAE,OAFN;AAGLC,cAAAA,UAAU,EAAE;AAHP;AAPT,WADc,EAcd;AAAER,YAAAA,MAAM,EAAE,OAAV;AAAmBD,YAAAA,QAAQ,EAAE;AAA7B,WAdc,CAAhB;AAgBA,cAAMU,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYrB,GAAG,CAACsB,QAAhB,EAA0BC,GAA1B,CAA8B,UAAAC,GAAG,EAAI;AACnD,mBAAO;AACLC,cAAAA,QAAQ,EAAED,GADL;AAELhB,cAAAA,KAAK,EAAER,GAAG,CAACsB,QAAJ,CAAaE,GAAb,EAAkBE,QAAlB;AAFF,aAAP;AAID,WALe,CAAhB;AAMA,iBACE;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,UAAD;AACE,YAAA,IAAI,EAAER,OADR;AAEE,YAAA,OAAO,EAAER,OAFX;AAGE,YAAA,QAAQ,EAAEQ,OAAO,CAACS,MAHpB;AAIE,YAAA,cAAc,EAAE,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAUD,SAtFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA4FD;;;;EAtGkCrC,KAAK,CAACsC,S;;SAAtBjC,O","sourcesContent":["import React from \"react\";\n// To create random data\n// import _ from \"lodash\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n// pull in the HOC\nimport treeTableHOC from \"react-table/lib/hoc/treeTable\";\nimport testData from \"../data/test-data\";\n\n// wrap ReacTable in it\n// the HOC provides the configuration for the TreeTable\nconst TreeTable = treeTableHOC(ReactTable);\n\n// function getTdProps(state, ri, ci) {\n//   console.log({ state, ri, ci });\n//   return {};\n// }\n\n// getTdProps={getTdProps}\n// Expander={Expander}\n\nexport default class Example extends React.Component {\n  constructor() {\n    super();\n    this.state = {      \n      data: testData\n    };\n  }\n  render() {\n    const { data } = this.state;\n    // now use the new TreeTable component\n    return (\n      <div>\n        <TreeTable\n          filterable\n          defaultFilterMethod={(filter, row, column) => {\n            const id = filter.pivotId || filter.id;\n            return row[id] !== undefined\n              ? String(row[id])\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              : true;\n          }}\n          data={data}\n          pivotBy={[\"state\", \"post\", \"city\"]}\n          columns={[\n            // we only require the accessor so TreeTable\n            // can handle the pivot automatically\n            {\n              accessor: \"state\"\n            },\n            {\n              accessor: \"post\"\n            },\n            {\n              accessor: \"city\"\n            },\n\n            // any other columns we want to display\n            {\n              Header: \"First Name\",\n              accessor: \"first_name\"\n            },\n            {\n              Header: \"Last Name\",\n              accessor: \"last_name\"\n            },\n            {\n              Header: \"Company Name\",\n              accessor: \"company_name\"\n            },\n            {\n              Header: \"Address\",\n              accessor: \"address\"\n            },\n            {\n              Header: \"Phone 1\",\n              accessor: \"phone1\"\n            },\n            {\n              Header: \"Email\",\n              accessor: \"email\"\n            }\n          ]}\n          defaultPageSize={10}\n          SubComponent={row => {\n            // a SubComponent just for the final detail\n            const columns = [\n              {\n                Header: \"Property\",\n                accessor: \"property\",\n                width: 200,\n                Cell: ci => {\n                  return `${ci.value}:`;\n                },\n                style: {\n                  backgroundColor: \"#DDD\",\n                  textAlign: \"right\",\n                  fontWeight: \"bold\"\n                }\n              },\n              { Header: \"Value\", accessor: \"value\" }\n            ];\n            const rowData = Object.keys(row.original).map(key => {\n              return {\n                property: key,\n                value: row.original[key].toString()\n              };\n            });\n            return (\n              <div style={{ padding: \"10px\" }}>\n                <ReactTable\n                  data={rowData}\n                  columns={columns}\n                  pageSize={rowData.length}\n                  showPagination={false}\n                />\n              </div>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}