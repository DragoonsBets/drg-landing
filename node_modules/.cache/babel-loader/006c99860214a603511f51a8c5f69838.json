{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toastrEmitter = exports.EE = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar emitter = new _eventemitter.default();\n\nvar addToToastr = function addToToastr(type, array) {\n  return emitter.emit('add/toastr', (0, _utils.mapToToastrMessage)(type, array));\n};\n\nvar actions = {};\n['light', 'message', 'info', 'success', 'warning', 'error'].forEach(function (item) {\n  actions[item] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return addToToastr(item, args);\n  };\n});\n\nactions.clean = function () {\n  return emitter.emit('clean/toastr');\n};\n/**\n * @params: can be a ID or a object that with a property type: 'success'\n * and by passing this we will remove all toastr with that type.\n */\n\n\nactions.removeByType = function (type) {\n  return emitter.emit('removeByType/toastr', type);\n};\n\nactions.remove = function (id) {\n  return emitter.emit('remove/toastr', id);\n};\n\nactions.confirm = function () {\n  emitter.emit('toastr/confirm', {\n    message: arguments.length <= 0 ? undefined : arguments[0],\n    options: (arguments.length <= 1 ? undefined : arguments[1]) || {}\n  });\n};\n\nvar EE = emitter;\nexports.EE = EE;\nvar toastrEmitter = actions;\nexports.toastrEmitter = toastrEmitter;","map":null,"metadata":{},"sourceType":"script"}