{"ast":null,"code":"import _objectSpread from \"/Users/ranaway/Documents/Proyectos/apex-react-drg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ranaway/Documents/Proyectos/apex-react-drg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ranaway/Documents/Proyectos/apex-react-drg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ranaway/Documents/Proyectos/apex-react-drg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ranaway/Documents/Proyectos/apex-react-drg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ranaway/Documents/Proyectos/apex-react-drg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react-drg/src/layouts/components/sidebar/sidemenuHelper.js\";\n// import external modules\nimport React, { PureComponent, Children, cloneElement, Fragment } from \"react\";\nimport { Badge } from \"reactstrap\"; // import internal(own) modules\n\nimport \"../../../assets/scss/components/sidebar/sidemenuHelper.scss\";\n\nvar SideMenuHelper =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SideMenuHelper, _PureComponent);\n\n  function SideMenuHelper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SideMenuHelper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SideMenuHelper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedMenuItem: -1\n    };\n\n    _this.toggle = function (itemIndex) {\n      // If menu is open\n      if (_this.state.selectedMenuItem === itemIndex) {\n        _this.setState({\n          selectedMenuItem: -1\n        });\n      } else {\n        // If menu is close\n        _this.setState({\n          selectedMenuItem: itemIndex\n        });\n      }\n    };\n\n    _this.closeOther = function (singleItemIndex) {\n      _this.setState(function (prevState) {\n        return {\n          selectedMenuItem: singleItemIndex\n        };\n      });\n    };\n\n    _this.handleClick = function (e) {\n      _this.props.toggleSidebarMenu(\"close\");\n    };\n\n    return _this;\n  }\n\n  _createClass(SideMenuHelper, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Nodes = Children.map(this.props.children, function (child, index) {\n        if (Boolean(child.type === SideMenuHelper.MenuSingleItem)) {\n          return cloneElement(child, _objectSpread({\n            closeOther: _this2.closeOther,\n            handleClick: _this2.handleClick,\n            index: index,\n            selected: index === _this2.state.selectedMenuItem ? true : false\n          }, child.props));\n        }\n\n        if (Boolean(child.type === SideMenuHelper.MenuMultiItems)) {\n          return cloneElement(child, _objectSpread({\n            toggle: _this2.toggle,\n            handleClick: _this2.handleClick,\n            index: index,\n            selected: index === _this2.state.selectedMenuItem ? true : false,\n            collapsedSidebar: child.props.collapsedSidebar !== undefined ? child.props.collapsedSidebar : false\n          }, child.props));\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"nav-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"main-menu-navigation\",\n        className: \"navigation navigation-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, Nodes));\n    }\n  }]);\n\n  return SideMenuHelper;\n}(PureComponent);\n\nSideMenuHelper.MenuSingleItem = function (props) {\n  return React.createElement(\"li\", {\n    className: \"nav-item\",\n    onClick: function onClick() {\n      props.closeOther(props.index);\n      props.handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.children, props.badgeText ? React.createElement(Badge, {\n    className: \"menu-item-badge menu-single-item-badge\",\n    color: props.badgeColor,\n    pill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.badgeText) : \"\");\n};\n\nSideMenuHelper.MenuMultiItems = function (props) {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"has-sub nav-item  \".concat(props.selected === true && props.collapsedSidebar === false ? \"open\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: function onClick() {\n      props.toggle(props.index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"menu-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.Icon ? props.Icon : null), React.createElement(\"span\", {\n    className: \"menu-item-text d-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" \", props.name), props.badgeText ? React.createElement(Badge, {\n    className: \"menu-item-badge menu-multiple-item-badge\",\n    color: props.badgeColor,\n    pill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.badgeText) : \"\", React.createElement(\"span\", {\n    className: \"item-arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.ArrowRight)), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, Children.map(props.children, function (child, index) {\n    if (child.props.children.type === undefined) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, child);\n    } else {\n      return React.createElement(\"li\", {\n        onClick: function onClick() {\n          props.handleClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, child);\n    }\n  }))));\n};\n\nexport default SideMenuHelper;","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react-drg/src/layouts/components/sidebar/sidemenuHelper.js"],"names":["React","PureComponent","Children","cloneElement","Fragment","Badge","SideMenuHelper","state","selectedMenuItem","toggle","itemIndex","setState","closeOther","singleItemIndex","prevState","handleClick","e","props","toggleSidebarMenu","Nodes","map","children","child","index","Boolean","type","MenuSingleItem","selected","MenuMultiItems","collapsedSidebar","undefined","badgeText","badgeColor","Icon","name","ArrowRight"],"mappings":"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","sourcesContent":["// import external modules\nimport React, { PureComponent, Children, cloneElement, Fragment } from \"react\";\nimport { Badge } from \"reactstrap\";\n// import internal(own) modules\nimport \"../../../assets/scss/components/sidebar/sidemenuHelper.scss\";\n\nclass SideMenuHelper extends PureComponent {\n   state = {\n      selectedMenuItem: -1\n   };\n\n   // Toggle menu with dropdown\n   toggle = itemIndex => {\n      // If menu is open\n      if (this.state.selectedMenuItem === itemIndex) {\n         this.setState({\n            selectedMenuItem: -1\n         });\n      } else {\n         // If menu is close\n         this.setState({ selectedMenuItem: itemIndex });\n      }\n   };\n\n   // Close other dropdown on single menu item click\n   closeOther = singleItemIndex => {\n      this.setState(prevState => {\n         return {\n            selectedMenuItem: singleItemIndex\n         };\n      });\n   };\n\n   handleClick = e => {\n      this.props.toggleSidebarMenu(\"close\");\n   };\n\n   static MenuSingleItem = props => (\n      <li\n         className=\"nav-item\"\n         onClick={() => {\n            props.closeOther(props.index);\n            props.handleClick();\n         }}\n      >\n         {props.children}\n         {props.badgeText ? (\n            <Badge className=\"menu-item-badge menu-single-item-badge\" color={props.badgeColor} pill>\n               {props.badgeText}\n            </Badge>\n         ) : (\n            \"\"\n         )}\n      </li>\n   );\n\n   static MenuMultiItems = props => (\n      <Fragment>\n         <li className={`has-sub nav-item  ${props.selected === true && props.collapsedSidebar === false ? `open` : \"\"}`}>\n             {/* eslint-disable-next-line */}\n            <a\n               onClick={() => {\n                  props.toggle(props.index);\n               }}\n            >\n               <i className=\"menu-icon\">{props.Icon ? props.Icon : null}</i>\n               <span className=\"menu-item-text d-inline\"> {props.name}</span>\n               {props.badgeText ? (\n                  <Badge className=\"menu-item-badge menu-multiple-item-badge\" color={props.badgeColor} pill>\n                     {props.badgeText}\n                  </Badge>\n               ) : (\n                  \"\"\n               )}\n\n               <span className=\"item-arrow\">{props.ArrowRight}</span>\n            </a>\n            \n            <ul>\n               {Children.map(props.children, (child, index) => {\n                  if (child.props.children.type === undefined) {\n                     return <li>{child}</li>;\n                  } else {\n                     return (\n                        <li\n                           onClick={() => {\n                              props.handleClick();\n                           }}\n                        >\n                           {child}\n                        </li>\n                     );\n                  }\n               })}\n            </ul>\n         </li>\n      </Fragment>\n   );\n\n   render() {\n      const Nodes = Children.map(this.props.children, (child, index) => {\n         if (Boolean(child.type === SideMenuHelper.MenuSingleItem)) {\n            return cloneElement(child, {\n               closeOther: this.closeOther,\n               handleClick: this.handleClick,\n               index: index,\n               selected: index === this.state.selectedMenuItem ? true : false,\n               ...child.props\n            });\n         }\n         if (Boolean(child.type === SideMenuHelper.MenuMultiItems)) {\n            return cloneElement(child, {\n               toggle: this.toggle,\n               handleClick: this.handleClick,\n               index: index,\n               selected: index === this.state.selectedMenuItem ? true : false,\n               collapsedSidebar: child.props.collapsedSidebar !== undefined ? child.props.collapsedSidebar : false,\n               ...child.props\n            });\n         }\n      });\n      return (\n         <div className=\"nav-container\">\n            <ul id=\"main-menu-navigation\" className=\"navigation navigation-main\">\n               {Nodes}\n            </ul>\n         </div>\n      );\n   }\n}\n\nexport default SideMenuHelper;\n"]},"metadata":{},"sourceType":"module"}