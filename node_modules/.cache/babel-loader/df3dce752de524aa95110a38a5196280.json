{"ast":null,"code":"import _classCallCheck from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react/src/components/cards/salesPerVisitChartCard.js\";\nimport React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\"; //Chsrtis JS\n\nimport ChartistGraph from \"react-chartist\";\nimport Chartist from \"chartist\"; //Chsrtis CSS\n\nimport \"chartist/dist/chartist.min.css\"; //Component specific chart CSS\n\nimport \"../../assets/scss/components/cards/salesPerVisitChartCard.scss\";\n\nvar SalesPerVisit =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SalesPerVisit, _PureComponent);\n\n  function SalesPerVisit() {\n    _classCallCheck(this, SalesPerVisit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SalesPerVisit).apply(this, arguments));\n  }\n\n  _createClass(SalesPerVisit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.cardTitle)), React.createElement(CardBody, {\n        className: \"pt-2 pb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-info mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-uppercase mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-circle primary font-small-2 mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), \" \", this.props.salesText), React.createElement(\"span\", {\n        className: \"text-uppercase mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-circle warning font-small-2 mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), \" \", this.props.visitText))), React.createElement(ChartistGraph, {\n        className: \"height-300 lineAreaChart mb-1\",\n        data: this.props.salesPerVisitData,\n        type: \"Line\",\n        options: {\n          low: 0,\n          showArea: true,\n          fullWidth: true,\n          onlyInteger: true,\n          axisY: {\n            low: 0,\n            scaleMinSpace: 50\n          },\n          axisX: {\n            showGrid: false\n          }\n        },\n        listener: {\n          created: function created(data) {\n            var defs = data.svg.elem(\"defs\");\n            defs.elem(\"linearGradient\", {\n              id: \"gradient\",\n              x1: 0,\n              y1: 1,\n              x2: 0,\n              y2: 0\n            }).elem(\"stop\", {\n              offset: 0,\n              \"stop-color\": \"rgba(255, 255, 255, 1)\"\n            }).parent().elem(\"stop\", {\n              offset: 1,\n              \"stop-color\": \"rgba(38, 198, 218, 1)\"\n            });\n          },\n          draw: function draw(data) {\n            var circleRadius = 6;\n\n            if (data.type === \"point\") {\n              var circle = new Chartist.Svg(\"circle\", {\n                cx: data.x,\n                cy: data.y,\n                r: circleRadius,\n                'class': \"ct-point-circle\"\n              });\n              data.element.replace(circle);\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SalesPerVisit;\n}(PureComponent);\n\nSalesPerVisit.propTypes = {\n  cardTitle: PropTypes.string,\n  salesText: PropTypes.string,\n  visitText: PropTypes.string,\n  salesPerVisitData: PropTypes.object\n};\nexport default SalesPerVisit;","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/components/cards/salesPerVisitChartCard.js"],"names":["React","PureComponent","Card","CardHeader","CardTitle","CardBody","PropTypes","ChartistGraph","Chartist","SalesPerVisit","props","cardTitle","salesText","visitText","salesPerVisitData","low","showArea","fullWidth","onlyInteger","axisY","scaleMinSpace","axisX","showGrid","created","data","defs","svg","elem","id","x1","y1","x2","y2","offset","parent","draw","circleRadius","type","circle","Svg","cx","x","cy","y","r","element","replace","propTypes","string","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,YAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;;AACA,OAAO,gCAAP,C,CACA;;AACA,OAAO,gEAAP;;IAEMC,a;;;;;;;;;;;;;6BACM;AACN,aACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKC,KAAL,CAAWC,SAAxC,CADH,CADH,EAIG,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAG,QAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAC4D,GAD5D,EAEI,KAAKD,KAAL,CAAWE,SAFf,CADH,EAKG;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAG,QAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAC4D,GAD5D,EAEI,KAAKF,KAAL,CAAWG,SAFf,CALH,CADH,CAJH,EAgBG,oBAAC,aAAD;AACG,QAAA,SAAS,EAAC,+BADb;AAEG,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,iBAFpB;AAGG,QAAA,IAAI,EAAC,MAHR;AAIG,QAAA,OAAO,EAAE;AACNC,UAAAA,GAAG,EAAE,CADC;AAENC,UAAAA,QAAQ,EAAE,IAFJ;AAGNC,UAAAA,SAAS,EAAE,IAHL;AAINC,UAAAA,WAAW,EAAE,IAJP;AAKNC,UAAAA,KAAK,EAAE;AACJJ,YAAAA,GAAG,EAAE,CADD;AAEJK,YAAAA,aAAa,EAAE;AAFX,WALD;AASNC,UAAAA,KAAK,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN;AATD,SAJZ;AAiBG,QAAA,QAAQ,EAAE;AACPC,UAAAA,OAAO,EAAE,iBAAAC,IAAI,EAAI;AACd,gBAAIC,IAAI,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAT,CAAc,MAAd,CAAX;AACAF,YAAAA,IAAI,CACAE,IADJ,CACS,gBADT,EAC2B;AACrBC,cAAAA,EAAE,EAAE,UADiB;AAErBC,cAAAA,EAAE,EAAE,CAFiB;AAGrBC,cAAAA,EAAE,EAAE,CAHiB;AAIrBC,cAAAA,EAAE,EAAE,CAJiB;AAKrBC,cAAAA,EAAE,EAAE;AALiB,aAD3B,EAQIL,IARJ,CAQS,MART,EAQiB;AACXM,cAAAA,MAAM,EAAE,CADG;AAEX,4BAAc;AAFH,aARjB,EAYIC,MAZJ,GAaIP,IAbJ,CAaS,MAbT,EAaiB;AACXM,cAAAA,MAAM,EAAE,CADG;AAEX,4BAAc;AAFH,aAbjB;AAiBF,WApBM;AAqBPE,UAAAA,IAAI,EAAE,cAAAX,IAAI,EAAI;AACX,gBAAIY,YAAY,GAAG,CAAnB;;AACA,gBAAIZ,IAAI,CAACa,IAAL,KAAc,OAAlB,EAA2B;AACxB,kBAAIC,MAAM,GAAG,IAAI9B,QAAQ,CAAC+B,GAAb,CAAiB,QAAjB,EAA2B;AACrCC,gBAAAA,EAAE,EAAEhB,IAAI,CAACiB,CAD4B;AAErCC,gBAAAA,EAAE,EAAElB,IAAI,CAACmB,CAF4B;AAGrCC,gBAAAA,CAAC,EAAER,YAHkC;AAIrC,yBAAS;AAJ4B,eAA3B,CAAb;AAMAZ,cAAAA,IAAI,CAACqB,OAAL,CAAaC,OAAb,CAAqBR,MAArB;AACF;AACH;AAhCM,SAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBH,CADH;AAuEF;;;;EAzEwBrC,a;;AA4E5BQ,aAAa,CAACsC,SAAd,GAA0B;AACvBpC,EAAAA,SAAS,EAAEL,SAAS,CAAC0C,MADE;AAEvBpC,EAAAA,SAAS,EAAEN,SAAS,CAAC0C,MAFE;AAGvBnC,EAAAA,SAAS,EAAEP,SAAS,CAAC0C,MAHE;AAIvBlC,EAAAA,iBAAiB,EAAER,SAAS,CAAC2C;AAJN,CAA1B;AAOA,eAAexC,aAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\nimport Chartist from \"chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/salesPerVisitChartCard.scss\";\n\nclass SalesPerVisit extends PureComponent {\n   render() {\n      return (\n         <Card>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <div className=\"chart-info mb-2\">\n                  <span className=\"text-uppercase mr-3\">\n                     <i className=\"fa fa-circle primary font-small-2 mr-1\" />{\" \"}\n                     {this.props.salesText}\n                  </span>\n                  <span className=\"text-uppercase mr-3\">\n                     <i className=\"fa fa-circle warning font-small-2 mr-1\" />{\" \"}\n                     {this.props.visitText}\n                  </span>\n               </div>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-300 lineAreaChart mb-1\"\n               data={this.props.salesPerVisitData}\n               type=\"Line\"\n               options={{\n                  low: 0,\n                  showArea: true,\n                  fullWidth: true,\n                  onlyInteger: true,\n                  axisY: {\n                     low: 0,\n                     scaleMinSpace: 50\n                  },\n                  axisX: {\n                     showGrid: false\n                  }\n               }}\n               listener={{\n                  created: data => {\n                     let defs = data.svg.elem(\"defs\");\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(255, 255, 255, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(38, 198, 218, 1)\"\n                        });\n                  },\n                  draw: data => {\n                     let circleRadius = 6;\n                     if (data.type === \"point\") {\n                        let circle = new Chartist.Svg(\"circle\", {\n                           cx: data.x,\n                           cy: data.y,\n                           r: circleRadius,\n                           'class': \"ct-point-circle\"\n                        });\n                        data.element.replace(circle);\n                     }\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nSalesPerVisit.propTypes = {\n   cardTitle: PropTypes.string,\n   salesText: PropTypes.string,\n   visitText: PropTypes.string,\n   salesPerVisitData: PropTypes.object\n};\n\nexport default SalesPerVisit;\n"]},"metadata":{},"sourceType":"module"}