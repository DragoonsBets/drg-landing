{"ast":null,"code":"var _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react/src/containers/contacts/addContact.js\";\nimport React from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/actions/contacts\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.contactApp.contacts.length\n  };\n};\n\nvar AddContact = function AddContact(_ref) {\n  var id = _ref.id,\n      dispatch = _ref.dispatch;\n  var firstname, lastname, department, company, phone, email, address, notes;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n\n      if (!firstname.value.trim() || !phone.value.trim() || !email.value.trim()) {\n        return;\n      }\n\n      dispatch(addContact(id, firstname.value, lastname.value, company.value, department.value, email.value, phone.value, address.value, notes.value));\n      firstname.value = \"\";\n      lastname.value = \"\";\n      company.value = \"\";\n      department.value = \"\";\n      email.value = \"\";\n      phone.value = \"\";\n      address.value = \"\";\n      notes.value = \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://randomuser.me/api/portraits/men/\" + id + \".jpg\",\n    className: \"rounded-circle\",\n    alt: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"firstname\",\n    id: \"firstName\",\n    ref: function ref(node) {\n      return firstname = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"lastname\",\n    id: \"lastName\",\n    ref: function ref(node) {\n      return lastname = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Department\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"department\",\n    id: \"department\",\n    ref: function ref(node) {\n      return department = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Company\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"company\",\n    id: \"company\",\n    ref: function ref(node) {\n      return company = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"phone\",\n    name: \"phone\",\n    id: \"phone\",\n    ref: function ref(node) {\n      return phone = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: function ref(node) {\n      return email = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"address\",\n    id: \"address\",\n    ref: function ref(node) {\n      return address = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"textarea\",\n    name: \"notes\",\n    id: \"notes\",\n    ref: function ref(node) {\n      return notes = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Add Contact\"))));\n};\n\nexport default connect(mapStateToProps)(AddContact);","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/containers/contacts/addContact.js"],"names":["React","Col","Row","Form","FormGroup","Label","Button","ModalBody","ModalFooter","connect","addContact","mapStateToProps","state","id","contactApp","contacts","length","AddContact","dispatch","firstname","lastname","department","company","phone","email","address","notes","e","preventDefault","value","trim","node"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/actions/contacts\";\n\nconst mapStateToProps = state => ({\n   id: state.contactApp.contacts.length\n});\n\nconst AddContact = ({ id, dispatch }) => {\n   let firstname, lastname, department, company, phone, email, address, notes;\n\n   return (\n      <React.Fragment>\n         <Form\n            onSubmit={e => {\n               e.preventDefault();\n               if (!firstname.value.trim() || !phone.value.trim() || !email.value.trim()) {\n                  return;\n               }\n               dispatch(\n                  addContact(\n                     id,\n                     firstname.value,\n                     lastname.value,\n                     company.value,\n                     department.value,\n                     email.value,\n                     phone.value,\n                     address.value,\n                     notes.value\n                  )\n               );\n               firstname.value = \"\";\n               lastname.value = \"\";\n               company.value = \"\";\n               department.value = \"\";\n               email.value = \"\";\n               phone.value = \"\";\n               address.value = \"\";\n               notes.value = \"\";\n            }}\n         >\n            <ModalBody>\n               <Row>\n                  <Col md={6}>\n                     <img\n                        src={\"https://randomuser.me/api/portraits/men/\" + id + \".jpg\"}\n                        className=\"rounded-circle\"\n                        alt={id}\n                     />\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"firstName\">First Name</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"firstname\"\n                           id=\"firstName\"\n                           ref={node => (firstname = node)}\n                           required\n                        />\n                     </FormGroup>\n                     <FormGroup>\n                        <Label for=\"lastName\">Last Name</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"lastname\"\n                           id=\"lastName\"\n                           ref={node => (lastname = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"department\">Department</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"department\"\n                           id=\"department\"\n                           ref={node => (department = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"company\">Company</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"company\"\n                           id=\"company\"\n                           ref={node => (company = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"phone\">Phone</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"phone\"\n                           name=\"phone\"\n                           id=\"phone\"\n                           ref={node => (phone = node)}\n                           required\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"email\"\n                           name=\"email\"\n                           id=\"email\"\n                           ref={node => (email = node)}\n                           required\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"address\">Address</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"address\"\n                           id=\"address\"\n                           ref={node => (address = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"notes\">Notes</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"textarea\"\n                           name=\"notes\"\n                           id=\"notes\"\n                           ref={node => (notes = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" type=\"submit\">\n                  Add Contact\n               </Button>\n            </ModalFooter>\n         </Form>\n      </React.Fragment>\n   );\n};\n\nexport default connect(mapStateToProps)(AddContact);\n"]},"metadata":{},"sourceType":"module"}