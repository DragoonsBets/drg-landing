{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _EventRowMixin = require('./EventRowMixin');\n\nvar _EventRowMixin2 = _interopRequireDefault(_EventRowMixin);\n\nvar _eventLevels = require('./utils/eventLevels');\n\nvar _messages = require('./utils/messages');\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _range = require('lodash/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar isSegmentInSlot = function isSegmentInSlot(seg, slot) {\n  return seg.left <= slot && seg.right >= slot;\n};\n\nvar eventsInSlot = function eventsInSlot(segments, slot) {\n  return segments.filter(function (seg) {\n    return isSegmentInSlot(seg, slot);\n  }).length;\n};\n\nvar EventEndingRow = function (_React$Component) {\n  _inherits(EventEndingRow, _React$Component);\n\n  function EventEndingRow() {\n    _classCallCheck(this, EventEndingRow);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  EventEndingRow.prototype.render = function render() {\n    var _props = this.props,\n        segments = _props.segments,\n        slotCount = _props.slots;\n    var rowSegments = (0, _eventLevels.eventLevels)(segments).levels[0];\n    var current = 1,\n        lastEnd = 1,\n        row = [];\n\n    while (current <= slotCount) {\n      var key = '_lvl_' + current;\n\n      var _ref = rowSegments.filter(function (seg) {\n        return isSegmentInSlot(seg, current);\n      })[0] || {},\n          event = _ref.event,\n          left = _ref.left,\n          right = _ref.right,\n          span = _ref.span; //eslint-disable-line\n\n\n      if (!event) {\n        current++;\n        continue;\n      }\n\n      var gap = Math.max(0, left - lastEnd);\n\n      if (this.canRenderSlotEvent(left, span)) {\n        var content = _EventRowMixin2.default.renderEvent(this.props, event);\n\n        if (gap) {\n          row.push(_EventRowMixin2.default.renderSpan(slotCount, gap, key + '_gap'));\n        }\n\n        row.push(_EventRowMixin2.default.renderSpan(slotCount, span, key, content));\n        lastEnd = current = right + 1;\n      } else {\n        if (gap) {\n          row.push(_EventRowMixin2.default.renderSpan(slotCount, gap, key + '_gap'));\n        }\n\n        row.push(_EventRowMixin2.default.renderSpan(slotCount, 1, key, this.renderShowMore(segments, current)));\n        lastEnd = current = current + 1;\n      }\n    }\n\n    return _react2.default.createElement('div', {\n      className: 'rbc-row'\n    }, row);\n  };\n\n  EventEndingRow.prototype.canRenderSlotEvent = function canRenderSlotEvent(slot, span) {\n    var segments = this.props.segments;\n    return (0, _range2.default)(slot, slot + span).every(function (s) {\n      var count = eventsInSlot(segments, s);\n      return count === 1;\n    });\n  };\n\n  EventEndingRow.prototype.renderShowMore = function renderShowMore(segments, slot) {\n    var _this2 = this;\n\n    var messages = (0, _messages2.default)(this.props.messages);\n    var count = eventsInSlot(segments, slot);\n    return count ? _react2.default.createElement('a', {\n      key: 'sm_' + slot,\n      href: '#',\n      className: 'rbc-show-more',\n      onClick: function onClick(e) {\n        return _this2.showMore(slot, e);\n      }\n    }, messages.showMore(count)) : false;\n  };\n\n  EventEndingRow.prototype.showMore = function showMore(slot, e) {\n    e.preventDefault();\n    this.props.onShowMore(slot);\n  };\n\n  return EventEndingRow;\n}(_react2.default.Component);\n\nEventEndingRow.propTypes = _extends({\n  segments: _propTypes2.default.array,\n  slots: _propTypes2.default.number,\n  messages: _propTypes2.default.object,\n  onShowMore: _propTypes2.default.func\n}, _EventRowMixin2.default.propTypes);\nEventEndingRow.defaultProps = _extends({}, _EventRowMixin2.default.defaultProps);\nexports.default = EventEndingRow;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}