{"ast":null,"code":"import _classCallCheck from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react/src/components/search/Search.js\";\nimport React, { Component } from \"react\";\nimport { Input, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Search } from \"react-feather\";\n\nvar NavbarSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavbarSearch, _Component);\n\n  function NavbarSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavbarSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavbarSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: [{\n        url: \"/\",\n        name: \"eCommerce\"\n      }, {\n        url: \"/analytics-dashboard\",\n        name: \"Analytics\"\n      }, {\n        url: \"/sales-dashboard\",\n        name: \"Sales\"\n      }, {\n        url: \"/email\",\n        name: \"Email\"\n      }, {\n        url: \"/chat\",\n        name: \"Chat\"\n      }, {\n        url: \"/contacts\",\n        name: \"Contacts\"\n      }, {\n        url: \"/todo\",\n        name: \"Todo\"\n      }, {\n        url: \"/calendar\",\n        name: \"Calendar\"\n      }, {\n        url: \"/cards/advanced-card\",\n        name: \"Advanced card\"\n      }, {\n        url: \"/cards/statistic-card\",\n        name: \"Statistic card\"\n      }],\n      searchTerm: \"\",\n      filtered: []\n    };\n\n    _this.escFunction = function (e) {\n      if (e.keyCode === 27) {\n        _this.setState({\n          searchTerm: \"\",\n          filtered: []\n        });\n      }\n    };\n\n    _this.handleClick = function (e) {\n      if (_this.state.searchTerm) {\n        if (_this.node.contains(e.target)) {\n          setTimeout(function () {\n            this.setState({\n              searchTerm: \"\",\n              filtered: \"\"\n            });\n          }.bind(_assertThisInitialized(_assertThisInitialized(_this))), 100);\n          return;\n        } else {\n          _this.setState({\n            searchTerm: \"\",\n            filtered: []\n          });\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      // Variable to hold the original version of the list\n      var currentList = []; // Variable to hold the filtered list before putting into state\n\n      var newList = []; // If the search bar isn't empty\n\n      if (e.target.value !== \"\") {\n        // Assign the original list to currentList\n        currentList = _this.state.list; // Use .filter() to determine which items should be displayed\n        // based on the search terms\n\n        newList = currentList.filter(function (item) {\n          // change current item to lowercase\n          var lc = item.name.toLowerCase(); // change search term to lowercase\n\n          var filter = e.target.value.toLowerCase();\n          return lc.includes(filter);\n        });\n      } else {\n        // If the search bar is empty, set newList to original task list\n        newList = [];\n      } // Set the filtered state based on what our rules added to newList\n\n\n      _this.setState({\n        filtered: newList,\n        searchTerm: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NavbarSearch, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      document.addEventListener(\"mousedown\", this.handleClick, true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.escFunction, false);\n      document.removeEventListener(\"mousedown\", this.handleClick, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var searchTerm = this.state.searchTerm;\n      return React.createElement(\"div\", {\n        className: \"position-relative has-icon-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"search-term\",\n        type: \"text\",\n        className: \"form-control round\",\n        placeholder: \"Try quick search\",\n        onChange: this.handleChange,\n        value: searchTerm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-control-position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Search, {\n        size: 16,\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), this.state.filtered ? React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        className: \"navbar-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.filtered.map(function (search, i) {\n        return React.createElement(ListGroupItem, {\n          key: i,\n          className: \"py-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, [React.createElement(Link, {\n          to: \"\".concat(search.url),\n          className: \"nav-link p-0\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, search.name)]);\n      }))) : \"\");\n    }\n  }]);\n\n  return NavbarSearch;\n}(Component);\n\nexport default NavbarSearch;","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/components/search/Search.js"],"names":["React","Component","Input","ListGroup","ListGroupItem","Link","Search","NavbarSearch","state","list","url","name","searchTerm","filtered","escFunction","e","keyCode","setState","handleClick","node","contains","target","setTimeout","bind","handleChange","currentList","newList","value","filter","item","lc","toLowerCase","includes","document","addEventListener","removeEventListener","map","search","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Search } from \"react-feather\";\n\nclass NavbarSearch extends Component {\n   state = {\n      list: [\n         {\n            url: \"/\",\n            name: \"eCommerce\"\n         },\n         {\n            url: \"/analytics-dashboard\",\n            name: \"Analytics\"\n         },\n         {\n            url: \"/sales-dashboard\",\n            name: \"Sales\"\n         },\n         {\n            url: \"/email\",\n            name: \"Email\"\n         },\n         {\n            url: \"/chat\",\n            name: \"Chat\"\n         },\n         {\n            url: \"/contacts\",\n            name: \"Contacts\"\n         },\n         {\n            url: \"/todo\",\n            name: \"Todo\"\n         },\n         {\n            url: \"/calendar\",\n            name: \"Calendar\"\n         },\n         {\n            url: \"/cards/advanced-card\",\n            name: \"Advanced card\"\n         },\n         {\n            url: \"/cards/statistic-card\",\n            name: \"Statistic card\"\n         }\n      ],\n      searchTerm: \"\",\n      filtered: []\n   };\n   escFunction = e => {\n      if (e.keyCode === 27) {\n         this.setState({\n            searchTerm: \"\",\n            filtered: []\n         });\n      }\n   };\n\n   handleClick = e => {\n      if (this.state.searchTerm) {\n         if (this.node.contains(e.target)) {\n            setTimeout(\n               function() {\n                  this.setState({\n                     searchTerm: \"\",\n                     filtered: \"\"\n                  });\n               }.bind(this),\n               100\n            );\n\n            return;\n         } else {\n            this.setState({\n               searchTerm: \"\",\n               filtered: []\n            });\n         }\n      }\n   };\n\n   handleChange = e => {\n      // Variable to hold the original version of the list\n      let currentList = [];\n\n      // Variable to hold the filtered list before putting into state\n      let newList = [];\n\n      // If the search bar isn't empty\n      if (e.target.value !== \"\") {\n         // Assign the original list to currentList\n         currentList = this.state.list;\n\n         // Use .filter() to determine which items should be displayed\n         // based on the search terms\n         newList = currentList.filter(item => {\n            // change current item to lowercase\n            const lc = item.name.toLowerCase();\n            // change search term to lowercase\n            const filter = e.target.value.toLowerCase();\n            return lc.includes(filter);\n         });\n      } else {\n         // If the search bar is empty, set newList to original task list\n         newList = [];\n      }\n      // Set the filtered state based on what our rules added to newList\n      this.setState({\n         filtered: newList,\n         searchTerm: e.target.value\n      });\n   };\n\n   componentWillMount() {\n      document.addEventListener(\"mousedown\", this.handleClick, true);\n   }\n   componentDidMount() {\n      document.addEventListener(\"keydown\", this.escFunction, false);\n   }\n   componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.escFunction, false);\n      document.removeEventListener(\"mousedown\", this.handleClick, false);\n   }\n\n   render() {\n      let searchTerm = this.state.searchTerm;\n      return (\n         <div className=\"position-relative has-icon-right\">\n            <Input\n               id=\"search-term\"\n               type=\"text\"\n               className=\"form-control round\"\n               placeholder=\"Try quick search\"\n               onChange={this.handleChange}\n               value={searchTerm}\n            />\n            <div className=\"form-control-position\">\n               <Search size={16} className=\"mb-0\" />\n            </div>\n            {this.state.filtered ? (\n               <div ref={node => (this.node = node)}>\n                  <ListGroup className=\"navbar-search\">\n                     {this.state.filtered.map((search, i) => {\n                        return (\n                           <ListGroupItem key={i} className=\"py-1\">\n                              {[\n                                 <Link to={`${search.url}`} className=\"nav-link p-0\" key={i}>\n                                    {search.name}\n                                 </Link>\n                              ]}\n                           </ListGroupItem>\n                        );\n                     })}\n                  </ListGroup>\n               </div>\n            ) : (\n               \"\"\n            )}\n         </div>\n      );\n   }\n}\n\nexport default NavbarSearch;\n"]},"metadata":{},"sourceType":"module"}