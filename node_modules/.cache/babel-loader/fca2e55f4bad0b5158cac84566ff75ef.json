{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { toggleTodo as _toggleTodo, toggleStarredTodo as _toggleStarredTodo, togglePriorityTodo as _togglePriorityTodo, deleteTodo as _deleteTodo, todoVisiblityFilter, todoDetails as _todoDetails } from \"../../redux/actions/todo/todoActions\";\nimport todoList from \"../../components/todo/todoList\";\n\nvar getVisibleTodo = function getVisibleTodo(todo, filter, todoSearch) {\n  switch (filter) {\n    case todoVisiblityFilter.SHOW_ALL:\n      return todo.filter(function (c) {\n        return !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n    // Project Filter\n\n    case todoVisiblityFilter.PROJECT_A_TODO:\n      return todo.filter(function (c) {\n        return c.project === \"Project A\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n\n    case todoVisiblityFilter.PROJECT_B_TODO:\n      return todo.filter(function (c) {\n        return c.project === \"Project B\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n    // Filters\n\n    case todoVisiblityFilter.STARRED_TODO:\n      return todo.filter(function (c) {\n        return c.starred && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n\n    case todoVisiblityFilter.PRIORITY_TODO:\n      return todo.filter(function (c) {\n        return c.priority && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n\n    case todoVisiblityFilter.COMPLETED_TODO:\n      return todo.filter(function (c) {\n        return c.completed && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n    // Tag filter\n\n    case todoVisiblityFilter.UIUX_TODO:\n      return todo.filter(function (c) {\n        return c.tag === \"uiux\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n\n    case todoVisiblityFilter.FRONTEND_TODO:\n      return todo.filter(function (c) {\n        return c.tag === \"frontend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n\n    case todoVisiblityFilter.BACKEND_TODO:\n      return todo.filter(function (c) {\n        return c.tag === \"backend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase());\n      });\n\n    default:\n      throw new Error(\"Unknown filter: \" + filter);\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    // Mapping todo object and Visiblityfilter state to Object\n    todo: getVisibleTodo(state.todoApp.todo, state.todoApp.todoVisibilityFilter, state.todoApp.todoSearch),\n    active: state.todoApp.todoDetails\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    toggleTodo: function toggleTodo(id) {\n      return dispatch(_toggleTodo(id));\n    },\n    toggleStarredTodo: function toggleStarredTodo(id) {\n      return dispatch(_toggleStarredTodo(id));\n    },\n    togglePriorityTodo: function togglePriorityTodo(id) {\n      return dispatch(_togglePriorityTodo(id));\n    },\n    deleteTodo: function deleteTodo(id) {\n      return dispatch(_deleteTodo(id));\n    },\n    todoDetails: function todoDetails(id) {\n      return dispatch(_todoDetails(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(todoList);","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/containers/todo/visibleTodoList.js"],"names":["connect","toggleTodo","toggleStarredTodo","togglePriorityTodo","deleteTodo","todoVisiblityFilter","todoDetails","todoList","getVisibleTodo","todo","filter","todoSearch","SHOW_ALL","c","deleted","task","toLocaleLowerCase","includes","PROJECT_A_TODO","project","PROJECT_B_TODO","STARRED_TODO","starred","PRIORITY_TODO","priority","COMPLETED_TODO","completed","UIUX_TODO","tag","FRONTEND_TODO","BACKEND_TODO","Error","mapStateToProps","state","ownProps","todoApp","todoVisibilityFilter","active","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport {\n   toggleTodo,\n   toggleStarredTodo,\n   togglePriorityTodo,\n   deleteTodo,\n   todoVisiblityFilter,\n   todoDetails\n} from \"../../redux/actions/todo/todoActions\";\nimport todoList from \"../../components/todo/todoList\";\n\nconst getVisibleTodo = (todo, filter, todoSearch) => {\n   switch (filter) {\n      case todoVisiblityFilter.SHOW_ALL:\n         return todo.filter(c => !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase()));\n\n      // Project Filter\n      case todoVisiblityFilter.PROJECT_A_TODO:\n         return todo.filter(\n            c =>\n               c.project === \"Project A\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.PROJECT_B_TODO:\n         return todo.filter(\n            c =>\n               c.project === \"Project B\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n\n      // Filters\n      case todoVisiblityFilter.STARRED_TODO:\n         return todo.filter(\n            c => c.starred && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.PRIORITY_TODO:\n         return todo.filter(\n            c => c.priority && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.COMPLETED_TODO:\n         return todo.filter(\n            c => c.completed && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n\n      // Tag filter\n      case todoVisiblityFilter.UIUX_TODO:\n         return todo.filter(\n            c => c.tag === \"uiux\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.FRONTEND_TODO:\n         return todo.filter(\n            c => c.tag === \"frontend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.BACKEND_TODO:\n         return todo.filter(\n            c => c.tag === \"backend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      default:\n         throw new Error(\"Unknown filter: \" + filter);\n   }\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n   // Mapping todo object and Visiblityfilter state to Object\n   todo: getVisibleTodo(state.todoApp.todo, state.todoApp.todoVisibilityFilter, state.todoApp.todoSearch),\n   active: state.todoApp.todoDetails\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n   toggleTodo: id => dispatch(toggleTodo(id)),\n   toggleStarredTodo: id => dispatch(toggleStarredTodo(id)),\n   togglePriorityTodo: id => dispatch(togglePriorityTodo(id)),\n   deleteTodo: id => dispatch(deleteTodo(id)),\n   todoDetails: id => dispatch(todoDetails(id))\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(todoList);\n"]},"metadata":{},"sourceType":"module"}