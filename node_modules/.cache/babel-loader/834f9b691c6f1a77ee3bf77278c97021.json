{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toastrWarn = toastrWarn;\nexports.createReducer = createReducer;\nexports.isBrowser = isBrowser;\nexports.keyCode = keyCode;\nexports.mapToToastrMessage = mapToToastrMessage;\nexports.guid = guid;\nexports.onCSSTransitionEnd = onCSSTransitionEnd;\nexports.preventDuplication = preventDuplication;\nexports.updateConfig = updateConfig;\nexports._bind = _bind;\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction whichAnimationEvent() {\n  var t;\n  var el = document.createElement('fakeelement');\n  var transitions = {\n    animation: 'animationend',\n    oanimation: 'oanimationend',\n    MSAnimation: 'MSAnimationEnd',\n    webkitAnimation: 'webkitAnimationEnd'\n  };\n\n  for (t in transitions) {\n    if (el.style[t] !== undefined) {\n      return transitions[t];\n    }\n  }\n}\n\nfunction createNewEvent(eventName) {\n  var event;\n\n  if (typeof Event === 'function') {\n    event = new Event(eventName);\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, true, true);\n  }\n\n  return event;\n}\n\nfunction isString(obj) {\n  if (typeof obj == 'string') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction toastrWarn(message) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  console.warn(\"[react-redux-toastr] \".concat(message));\n}\n\nfunction createReducer(initialState, fnMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n    var _ref = arguments.length > 1 ? arguments[1] : undefined,\n        type = _ref.type,\n        payload = _ref.payload;\n\n    var handle = fnMap[type];\n    return handle ? handle(state, payload) : state;\n  };\n}\n\nfunction isBrowser() {\n  if (typeof window !== 'undefined') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction keyCode(e) {\n  return e.which ? e.which : e.keyCode;\n}\n\nfunction mapToToastrMessage(type, array) {\n  var obj = {};\n  obj.type = type;\n  obj.position = _config.default.position;\n  obj.options = array.filter(function (item) {\n    return _typeof(item) == 'object';\n  })[0] || {};\n\n  if (obj.options.hasOwnProperty('position')) {\n    obj.position = obj.options.position;\n  }\n\n  if (!obj.options.hasOwnProperty('removeOnHover')) {\n    obj.options.removeOnHover = true;\n\n    if (type === 'message') {\n      obj.options.removeOnHover = false;\n    }\n  }\n\n  if (!obj.options.hasOwnProperty('showCloseButton')) {\n    obj.options.showCloseButton = true;\n  }\n\n  if (type === 'message' && !obj.options.hasOwnProperty('timeOut')) {\n    obj.options.timeOut = 0;\n  }\n\n  if (isString(array[0]) && isString(array[1])) {\n    obj.title = array[0];\n    obj.message = array[1];\n  } else if (isString(array[0]) && !isString(array[1])) {\n    obj.title = array[0];\n  } else {\n    obj.message = array[0];\n  }\n\n  return obj;\n}\n\nfunction guid() {\n  var r = function r() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  };\n\n  return r() + r() + r() + '-' + r() + '_' + r() + '-' + r() + '_' + r() + r() + r();\n}\n\nfunction onCSSTransitionEnd(node, callback) {\n  if (!node) {\n    return;\n  } // if css animation is failed - dispatch event manually\n\n\n  var animationEnd = whichAnimationEvent();\n  var timeoutId = setTimeout(function () {\n    var e = createNewEvent(animationEnd);\n    toastrWarn('The toastr box was closed automatically, please check \\'transitionOut\\' prop value');\n    node.dispatchEvent(e);\n  }, _config.default.maxAnimationDelay);\n\n  var runOnce = function runOnce(e) {\n    clearTimeout(timeoutId); // stopPropagation is not working in IE11 and Edge, the transitionend from the Button.js is waiting\n    // on the confirm animation to end first and not the Button.js\n\n    e.stopPropagation();\n    node.removeEventListener(animationEnd, runOnce);\n    callback && callback(e);\n  };\n\n  node.addEventListener(animationEnd, runOnce);\n}\n\nfunction preventDuplication(currentData, newObjec) {\n  var hasDuplication = false;\n  currentData.forEach(function (item) {\n    // If the toastr options implicitly specify not to prevent duplicates then skip\n    if (item.options && item.options.preventDuplicates === false) return; // Because the toastr has a unic id we will check by the title and message.\n\n    if (item.title === newObjec.title && item.message === newObjec.message && item.type === newObjec.type) {\n      hasDuplication = true;\n    }\n  });\n  return hasDuplication;\n}\n\nfunction updateConfig(obj) {\n  Object.keys(_config.default).forEach(function (key) {\n    if (obj.hasOwnProperty(key)) {\n      _config.default[key] = obj[key];\n    }\n  });\n}\n\nfunction _bind(strinOrAray, scope) {\n  var array = strinOrAray;\n\n  if (!Array.isArray(strinOrAray)) {\n    array = strinOrAray.split(' ');\n  }\n\n  return array.map(function (item) {\n    return scope[item] = scope[item].bind(scope);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}