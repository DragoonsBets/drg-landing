{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'prop-types', 'emotion', 'recompose/onlyUpdateForKeys'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('prop-types'), require('emotion'), require('recompose/onlyUpdateForKeys'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes, global.emotion, global.onlyUpdateForKeys);\n    global.ClipLoader = mod.exports;\n  }\n})(this, function (exports, _react, _propTypes, _emotion, _onlyUpdateForKeys) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  } // This returns an animation\n\n\n  var clip = (0, _emotion.keyframes)('0%{transform:rotate(0deg) scale(1)}50%{transform:rotate(180deg) scale(0.8)}100%{transform:rotate(360deg) scale(1)}');\n\n  var Loader = function (_React$Component) {\n    _inherits(Loader, _React$Component);\n\n    function Loader() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Loader);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function () {\n        var _this$props = _this.props,\n            size = _this$props.size,\n            sizeUnit = _this$props.sizeUnit,\n            color = _this$props.color,\n            className = _this$props.className;\n        var style = (0, _emotion.css)('{background:transparent !important;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';border-radius:100%;border:2px solid;border-color:', color, ';border-bottom-color:transparent;display:inline-block;animation:', clip, ' 0.75s 0s infinite linear;animation-fill-mode:both;}');\n        return className ? (0, _emotion.css)(style, ';', className) : style;\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(Loader, [{\n      key: 'render',\n      value: function render() {\n        var loading = this.props.loading;\n        return loading ? _react2.default.createElement('div', {\n          className: this.style()\n        }) : null;\n      }\n    }]);\n\n    return Loader;\n  }(_react2.default.Component);\n\n  Loader.propTypes = {\n    loading: _propTypes2.default.bool,\n    color: _propTypes2.default.string,\n    size: _propTypes2.default.number,\n    sizeUnit: _propTypes2.default.string,\n    className: _propTypes2.default.string\n  };\n  Loader.defaultProps = {\n    loading: true,\n    color: '#000000',\n    size: 35,\n    sizeUnit: 'px',\n    className: ''\n  };\n  var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'className'])(Loader);\n  Component.defaultProps = Loader.defaultProps;\n  exports.default = Component;\n});","map":null,"metadata":{},"sourceType":"script"}