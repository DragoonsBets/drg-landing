{"ast":null,"code":"import _toConsumableArray from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ranaway/Documents/Proyectos/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ranaway/Documents/Proyectos/apex-react/src/views/calender/calender.js\";\n// import external modules\nimport React, { Fragment, Component } from \"react\";\nimport { Row, Col, Modal, ModalBody, ModalFooter, Button, Input, Card, CardBody } from \"reactstrap\";\nimport ReactBigCalender from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport DateTimePicker from \"react-datetime\";\nimport \"react-datetime/css/react-datetime.css\";\nimport { handleAddEvent } from \"../../redux/actions/calenderAction/calenderAction\";\nReactBigCalender.momentLocalizer(moment);\nvar allViews = Object.keys(ReactBigCalender.Views).map(function (k) {\n  return ReactBigCalender.Views[k];\n});\n\nvar Calender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calender, _Component);\n\n  function Calender() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calender);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calender)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      start: new Date(),\n      end: new Date(),\n      eventTitle: \"Enter Your Title\",\n      events: []\n    };\n\n    _this.toggleModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        eventTitle: e.target.value\n      });\n    };\n\n    _this.handleStartDateTimeChange = function (date) {\n      _this.setState(function (prevState) {\n        return {\n          start: date._d\n        };\n      });\n    };\n\n    _this.handleEndDateTimeChange = function (date) {\n      _this.setState(function (prevState) {\n        return {\n          end: date._d\n        };\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var handleAddEvent = _this.props.handleAddEvent;\n\n      _this.setState(function (prevState) {\n        var _this$state = _this.state,\n            start = _this$state.start,\n            eventTitle = _this$state.eventTitle,\n            end = _this$state.end,\n            events = _this$state.events;\n        return {\n          events: [].concat(_toConsumableArray(events), [{\n            title: eventTitle,\n            allDay: true,\n            start: start,\n            end: end\n          }])\n        };\n      }, function () {\n        var _this$state2 = _this.state,\n            start = _this$state2.start,\n            end = _this$state2.end,\n            eventTitle = _this$state2.eventTitle,\n            events = _this$state2.events;\n        var param = {\n          start: start,\n          eventTitle: eventTitle,\n          end: end\n        };\n        handleAddEvent(param, events);\n      });\n\n      _this.toggleModal();\n    };\n\n    _this.handleSlotSelect = function (slotInfo) {\n      _this.toggleModal();\n\n      _this.setState(function (prevState) {\n        return {\n          start: slotInfo.start,\n          end: slotInfo.end,\n          eventTitle: \"Enter Your Title\"\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calender, [{\n    key: \"render\",\n    value: function render() {\n      var calender = this.props.calender;\n      var _this$state3 = this.state,\n          modal = _this$state3.modal,\n          eventTitle = _this$state3.eventTitle,\n          start = _this$state3.start,\n          end = _this$state3.end;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: modal,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Event Title\"), React.createElement(Input, {\n        value: eventTitle,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(DateTimePicker, {\n        onChange: this.handleStartDateTimeChange,\n        defaultValue: calender.startDate,\n        value: start,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"End Date\"), React.createElement(DateTimePicker, {\n        onChange: this.handleEndDateTimeChange,\n        defaultValue: calender.startDate,\n        value: end,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Calendar\"), React.createElement(\"p\", {\n        className: \"content-sub-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/intljusticemission/react-big-calendar\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"React Big Calendar\"), \" is gcal/outlook like calendar component. This is the most advanced example having various features. This example lists all the events on the calendar with Add new event functionality.\", React.createElement(\"a\", {\n        href: \"https://github.com/intljusticemission/react-big-calendar\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://img.shields.io/github/stars/intljusticemission/react-big-calendar.svg?style=social\",\n        alt: \"Stars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: \"https://img.shields.io/npm/dm/react-big-calendar.svg\",\n        alt: \"Downloads\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 700\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(ReactBigCalender, {\n        events: calender.events,\n        views: allViews,\n        step: 60,\n        defaultDate: new Date(),\n        selectable: true,\n        onSelectSlot: this.handleSlotSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Calender;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    calender: state.calender\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleAddEvent: handleAddEvent\n})(Calender);","map":{"version":3,"sources":["/Users/ranaway/Documents/Proyectos/apex-react/src/views/calender/calender.js"],"names":["React","Fragment","Component","Row","Col","Modal","ModalBody","ModalFooter","Button","Input","Card","CardBody","ReactBigCalender","moment","connect","DateTimePicker","handleAddEvent","momentLocalizer","allViews","Object","keys","Views","map","k","Calender","state","modal","start","Date","end","eventTitle","events","toggleModal","setState","prevState","handleChange","e","target","value","handleStartDateTimeChange","date","_d","handleEndDateTimeChange","handleSubmit","props","title","allDay","param","handleSlotSelect","slotInfo","calender","startDate","height","mapStateToProps"],"mappings":"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","sourcesContent":["// import external modules\nimport React, { Fragment, Component } from \"react\";\nimport {\n   Row,\n   Col,\n   Modal,\n   ModalBody,\n   ModalFooter,\n   Button,\n   Input,\n   Card,\n   CardBody\n} from \"reactstrap\";\nimport ReactBigCalender from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport DateTimePicker from \"react-datetime\";\nimport \"react-datetime/css/react-datetime.css\";\n\nimport { handleAddEvent } from \"../../redux/actions/calenderAction/calenderAction\";\n\nReactBigCalender.momentLocalizer(moment);\nconst allViews = Object.keys(ReactBigCalender.Views).map(\n   k => ReactBigCalender.Views[k]\n);\n\nclass Calender extends Component {\n   state = {\n      modal: false,\n      start: new Date(),\n      end: new Date(),\n      eventTitle: \"Enter Your Title\",\n      events: []\n   };\n\n   toggleModal = () => {\n      this.setState(prevState => ({\n         modal: !prevState.modal\n      }));\n   };\n\n   handleChange = e => {\n      this.setState({\n         eventTitle: e.target.value\n      });\n   };\n\n   handleStartDateTimeChange = date => {\n      this.setState(prevState => ({\n         start: date._d\n      }));\n   };\n\n   handleEndDateTimeChange = date => {\n      this.setState(prevState => ({\n         end: date._d\n      }));\n   };\n\n   handleSubmit = () => {\n      const { handleAddEvent } = this.props;\n\n      this.setState(\n         prevState => {\n            const { start, eventTitle, end, events } = this.state;\n            return {\n               events: [\n                  ...events,\n                  {\n                     title: eventTitle,\n                     allDay: true,\n                     start: start,\n                     end: end\n                  }\n               ]\n            };\n         },\n         () => {\n            const { start, end, eventTitle, events } = this.state;\n            let param = {\n               start,\n               eventTitle,\n               end\n            };\n            handleAddEvent(param, events);\n         }\n      );\n      this.toggleModal();\n   };\n\n   handleSlotSelect = slotInfo => {\n      this.toggleModal();\n      this.setState(prevState => ({\n         start: slotInfo.start,\n         end: slotInfo.end,\n         eventTitle: \"Enter Your Title\"\n      }));\n   };\n\n   render() {\n      const { calender } = this.props;\n      const { modal, eventTitle, start, end } = this.state;\n      return (\n         <Fragment>\n            <Modal isOpen={modal} toggle={this.toggleModal}>\n               <ModalBody>\n                  <label>Event Title</label>\n                  <Input value={eventTitle} onChange={this.handleChange} />\n                  <Fragment>\n                     <div>\n                        <label>Start Date</label>\n                        <DateTimePicker\n                           onChange={this.handleStartDateTimeChange}\n                           defaultValue={calender.startDate}\n                           value={start}\n                        />\n                     </div>\n                     <div>\n                        <label>End Date</label>\n                        <DateTimePicker\n                           onChange={this.handleEndDateTimeChange}\n                           defaultValue={calender.startDate}\n                           value={end}\n                        />\n                     </div>\n                  </Fragment>\n               </ModalBody>\n               <ModalFooter>\n                  <Button color=\"secondary\" onClick={this.toggleModal}>\n                     Cancel\n                  </Button>\n                  <Button color=\"success\" onClick={this.handleSubmit}>\n                     Submit\n                  </Button>\n               </ModalFooter>\n            </Modal>\n            <Row>\n               <Col xs=\"12\">\n                  <div className=\"content-header\">Calendar</div>\n                  <p className=\"content-sub-header\">\n                     <a href=\"https://github.com/intljusticemission/react-big-calendar\" target=\"_blank\" rel=\"noopener noreferrer\">React Big Calendar</a> is gcal/outlook like calendar component. This is the most advanced example having various features.\n                     This example lists all the events on the calendar with Add new event functionality.\n                     <a href=\"https://github.com/intljusticemission/react-big-calendar\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src=\"https://img.shields.io/github/stars/intljusticemission/react-big-calendar.svg?style=social\" alt=\"Stars\" />\n                        <img src=\"https://img.shields.io/npm/dm/react-big-calendar.svg\" alt=\"Downloads\"/>\n                     </a>\n                  </p>\n               </Col>\n            </Row>\n\n            <Card>\n               <CardBody>\n                  <div style={{ height: 700 }}>\n                     <ReactBigCalender\n                        events={calender.events}\n                        views={allViews}\n                        step={60}\n                        defaultDate={new Date()}\n                        selectable={true}\n                        onSelectSlot={this.handleSlotSelect}\n                     />\n                  </div>\n               </CardBody>\n            </Card>\n         </Fragment>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   calender: state.calender\n});\n\nexport default connect(\n   mapStateToProps,\n   { handleAddEvent }\n)(Calender);\n"]},"metadata":{},"sourceType":"module"}